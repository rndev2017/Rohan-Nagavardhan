{"version":3,"file":"generate-help-url.esm.esm.js","sources":["../../src/ui-components/conditionalWrapper/ConditionalWrapper.tsx","../../src/ui-components/button/Button.tsx","../../src/ui-components/dialog/Dialog.tsx","../../src/ui-components/menuButton/MenuButton.tsx","../../src/ui-components/menuGroup/MenuGroup.tsx","../../src/ui-components/menuItem/MenuItem.tsx","../../src/ui-components/popover/Popover.tsx","../../src/ui-components/tab/Tab.tsx","../../src/ui-components/tooltip/constants.ts","../../src/ui-components/tooltip/Tooltip.tsx","../../src/ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider.tsx","../../../../node_modules/.pnpm/@sanity+generate-help-url@3.0.0/node_modules/@sanity/generate-help-url/dist/generate-help-url.esm.js"],"sourcesContent":["export type ConditionalWrapperRenderWrapperCallback = (children: React.ReactNode) => React.ReactNode\n\n/**\n * A helper component that conditionally wraps its children in a wrapper component.\n *\n * @internal\n */\nexport function ConditionalWrapper({\n  children,\n  condition,\n  wrapper,\n}: {\n  children: React.ReactNode\n  condition: boolean\n  wrapper: ConditionalWrapperRenderWrapperCallback\n}): React.ReactNode {\n  if (!condition) {\n    return children\n  }\n\n  return wrapper(children)\n}\n","/* eslint-disable no-restricted-imports */\n\nimport {Button as UIButton, type ButtonProps as UIButtonProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps, useCallback} from 'react'\nimport {styled} from 'styled-components'\n\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\ntype BaseButtonProps = Pick<\n  UIButtonProps,\n  | 'as'\n  | 'icon'\n  | 'iconRight'\n  | 'justify'\n  | 'loading'\n  | 'mode'\n  | 'paddingY'\n  | 'selected'\n  | 'tone'\n  | 'type'\n  | 'width'\n> & {\n  size?: 'default' | 'large'\n}\n\ntype ButtonWithText = {\n  text: string\n  tooltipProps?: TooltipProps | null\n  icon?: UIButtonProps['icon']\n}\n\ntype IconButton = {\n  text?: undefined\n  icon?: UIButtonProps['icon']\n  /**\n   * When using a button with an icon, tooltipProps are required to enforce consistency in UI.\n   */\n  tooltipProps: TooltipProps | null\n}\n\n/** @internal */\nexport type ButtonProps = BaseButtonProps & (ButtonWithText | IconButton)\n\nconst LARGE_BUTTON_PROPS = {\n  space: 3,\n  padding: 3,\n}\nconst DEFAULT_BUTTON_PROPS = {\n  space: 2,\n  padding: 2,\n}\n\nconst TooltipButtonWrapper = styled.span`\n  display: inline-flex;\n`\n/**\n * Customized Sanity UI <Button> with pre-defined layout options.\n *\n * @internal\n */\nexport const Button = forwardRef(function Button(\n  {\n    size = 'default',\n    mode = 'default',\n    paddingY,\n    tone = 'default',\n    tooltipProps,\n    ...rest\n  }: ButtonProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size' | 'title'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This span is needed to make the tooltip work in disabled buttons */}\n          <TooltipButtonWrapper>{children}</TooltipButtonWrapper>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  const sizeProps = size === 'default' ? DEFAULT_BUTTON_PROPS : LARGE_BUTTON_PROPS\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIButton {...rest} {...sizeProps} paddingY={paddingY} ref={ref} mode={mode} tone={tone} />\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  Box,\n  type BoxHeight,\n  Button as UIButton,\n  Dialog as UIDialog,\n  type DialogProps as UIDialogProps,\n  Flex,\n} from '@sanity/ui'\nimport {type ComponentProps, forwardRef, type HTMLProps, type ReactNode, type Ref} from 'react'\nimport {useTranslation} from 'react-i18next'\n\n/** @internal */\nexport type DialogProps = Pick<\n  UIDialogProps,\n  | '__unstable_autoFocus'\n  | '__unstable_hideCloseButton'\n  | 'contentRef'\n  | 'header'\n  | 'id'\n  | 'onActivate'\n  | 'onClickOutside'\n  | 'onClose'\n  | 'portal'\n  | 'position'\n  | 'scheme'\n  | 'width'\n> & {\n  /**\n   * Dialog body height.\n   * Set this to 'fill' (i.e. 100%) if you want overflow body content to be contained\n   * and not trigger dynamic border visibility.\n   */\n  bodyHeight?: BoxHeight\n  children?: ReactNode\n  footer?: {\n    cancelButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n    confirmButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n  }\n  /**\n   * If enabled, removes all default padding from dialog content.\n   */\n  padding?: boolean\n}\n\n/**\n * Customized Sanity UI <Dialog> that enforces an opinionated footer layout with a max of two buttons (confirm and cancel).\n *\n * @internal\n */\nexport const Dialog = forwardRef(function Dialog(\n  {\n    bodyHeight,\n    children,\n    footer,\n    padding = true,\n    ...props\n  }: DialogProps & Pick<HTMLProps<HTMLDivElement>, 'onDragEnter' | 'onDrop'>,\n  ref: Ref<HTMLDivElement>,\n) {\n  const {t} = useTranslation()\n\n  return (\n    <UIDialog\n      {...props}\n      animate\n      ref={ref}\n      footer={\n        (footer?.confirmButton || footer?.cancelButton) && (\n          <Flex width=\"full\" gap={3} justify=\"flex-end\" padding={3}>\n            {props.onClose && (\n              <UIButton\n                mode=\"bleed\"\n                padding={2}\n                text={t('common.dialog.cancel-button.text')}\n                tone=\"default\"\n                onClick={props.onClose}\n                {...footer.cancelButton}\n              />\n            )}\n            {footer.confirmButton && (\n              <UIButton\n                mode=\"default\"\n                padding={2}\n                text={t('common.dialog.confirm-button.text')}\n                tone=\"critical\"\n                {...footer.confirmButton}\n              />\n            )}\n          </Flex>\n        )\n      }\n    >\n      <Box height={bodyHeight} padding={padding ? 4 : 0}>\n        {children}\n      </Box>\n    </UIDialog>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  MenuButton as UIMenuButton,\n  type MenuButtonProps as UIMenuButtonProps,\n  type PopoverProps,\n} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef} from 'react'\n\n/** @internal */\nexport type MenuButtonProps = Omit<UIMenuButtonProps, 'popover'> & {\n  popover?: Omit<PopoverProps, 'animate' | 'content' | 'open'>\n}\n\n/**\n * Customized Sanity UI <MenuButton> that enforces popover animation.\n *\n * @internal\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  return (\n    <UIMenuButton\n      {...props}\n      ref={ref}\n      popover={{\n        ...props.popover,\n        animate: true,\n      }}\n    />\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {MenuGroup as UIMenuGroup, type MenuGroupProps as UIMenuGroupProps} from '@sanity/ui'\nimport {type HTMLProps} from 'react'\n\n/** @internal */\nexport type MenuGroupProps = Pick<UIMenuGroupProps, 'icon' | 'popover' | 'text' | 'tone'>\n\n/**\n * Customized Sanity UI <MenuGroup> component with pre-defined layout options.\n *\n * @internal\n */\nexport const MenuGroup = (\n  props: MenuGroupProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'tabIndex'>,\n) => {\n  return <UIMenuGroup {...props} fontSize={1} padding={3} />\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  Badge,\n  Box,\n  Flex,\n  Hotkeys,\n  MenuItem as UIMenuItem,\n  type MenuItemProps as UIMenuItemProps,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport {\n  createElement,\n  forwardRef,\n  type HTMLProps,\n  isValidElement,\n  type JSX,\n  type ReactNode,\n  type Ref,\n  useCallback,\n  useMemo,\n} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {styled} from 'styled-components'\n\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\nconst FONT_SIZE = 1\nconst SUBTITLE_FONT_SIZE = 0\n\n/* Using px value here to make title/subtitles align with icon */\nconst SubtitleText = styled(Text)`\n  margin-top: 2px;\n`\n\n/** @internal */\nexport type MenuItemProps = Pick<\n  UIMenuItemProps,\n  'as' | 'icon' | 'iconRight' | 'pressed' | 'selected' | 'tone' | 'hotkeys'\n> & {\n  badgeText?: string\n  /**\n   * Usage of `children` is not supported, import `MenuItem` from `@sanity/ui` instead.\n   */\n  children?: undefined\n  /**\n   * Previews should be 25x25.\n   */\n  preview?: ReactNode\n  /**\n   * Optional render callback which receives menu item content.\n   */\n  renderMenuItem?: (menuItemContent: JSX.Element) => ReactNode\n  text?: string\n  tooltipProps?: TooltipProps | null\n  /**\n   * Optional subtitle prop for the menu item.\n   * While not recommended, it is utilized for the workspace menu button.\n   */\n  __unstable_subtitle?: string\n  /**\n   * An optional property to adjust spacing in the preview between the icon and the text.\n   * Not recommended, but is applied to the workspace menu button..\n   */\n  __unstable_space?: number\n}\n\nconst PreviewWrapper = styled(Box)`\n  height: 25px;\n  width: 25px;\n  overflow: hidden;\n`\n\n/**\n * Customized Sanity UI <MenuItem> that restricts usage of `children` to encourage simple,\n * single line menu items.\n *\n * The workspace menu button needed a subtitle - hence, the StudioUI MenuIten now takes a subtitle prop.\n * This is only an escape hatch for the workspace menu button and is not recommended for general use.\n *\n * It also accepts a prop to attach tooltips as well as custom badges too.\n *\n * @internal\n */\nexport const MenuItem = forwardRef(function MenuItem(\n  {\n    badgeText,\n    children: childrenProp,\n    disabled,\n    hotkeys,\n    icon,\n    iconRight,\n    preview = null,\n    renderMenuItem,\n    text,\n    tooltipProps,\n    __unstable_subtitle,\n    __unstable_space,\n    ...rest\n  }: MenuItemProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'selected' | 'tabIndex' | 'size'>,\n  ref: Ref<HTMLDivElement>,\n) {\n  const menuItemContent = useMemo(() => {\n    return (\n      <Flex align=\"center\" gap={2}>\n        {preview && (\n          <PreviewWrapper\n            style={{opacity: disabled ? 0.25 : undefined}}\n            paddingRight={__unstable_space ? 1 : 0}\n          >\n            <Flex align=\"center\" height=\"fill\" justify=\"center\">\n              {preview}\n            </Flex>\n          </PreviewWrapper>\n        )}\n        {icon && (\n          <Box paddingRight={1}>\n            <Text size={FONT_SIZE}>\n              {isValidElement(icon) && icon}\n              {isValidElementType(icon) && createElement(icon)}\n            </Text>\n          </Box>\n        )}\n        {text && (\n          <Stack\n            flex={1}\n            space={__unstable_subtitle ? 1 : 2}\n            paddingLeft={__unstable_subtitle ? 1 : 0}\n          >\n            <Text size={FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\">\n              {text}\n            </Text>\n            {__unstable_subtitle && (\n              <SubtitleText size={SUBTITLE_FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\" muted>\n                {__unstable_subtitle}\n              </SubtitleText>\n            )}\n          </Stack>\n        )}\n        {(badgeText || hotkeys || iconRight) && (\n          <Flex align=\"center\" gap={3} marginLeft={3}>\n            {hotkeys && <Hotkeys keys={hotkeys} style={{marginTop: -4, marginBottom: -4}} />}\n\n            {badgeText && (\n              <Badge fontSize={0} style={{marginTop: -4, marginBottom: -4}}>\n                {badgeText}\n              </Badge>\n            )}\n\n            {iconRight && (\n              <Text size={FONT_SIZE}>\n                {isValidElement(iconRight) && iconRight}\n                {isValidElementType(iconRight) && createElement(iconRight)}\n              </Text>\n            )}\n          </Flex>\n        )}\n      </Flex>\n    )\n  }, [\n    preview,\n    disabled,\n    __unstable_space,\n    icon,\n    text,\n    __unstable_subtitle,\n    badgeText,\n    hotkeys,\n    iconRight,\n  ])\n\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This div is needed to make the tooltip work in disabled menu items */}\n          <div>{children}</div>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIMenuItem\n        disabled={disabled}\n        paddingLeft={preview ? 1 : 3}\n        paddingRight={3}\n        paddingY={preview ? 1 : 3}\n        ref={ref}\n        {...rest}\n      >\n        {typeof childrenProp === 'undefined' && typeof renderMenuItem === 'function'\n          ? renderMenuItem(menuItemContent)\n          : menuItemContent}\n      </UIMenuItem>\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {Popover as UIPopover, type PopoverProps as UIPopoverProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\n/** @internal */\nexport type PopoverProps = Omit<UIPopoverProps, 'animate'>\n\n/**\n * Customized Sanity UI <Popover> that forces `animate=true`\n *\n * All Popovers in the studio should be animated.\n *\n * @internal\n */\nexport const Popover = forwardRef(function Popover(\n  props: PopoverProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'width'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  return <UIPopover {...props} animate ref={ref} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {Tab as UITab, type TabProps as UITabProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\n/**\n * @internal\n *\n * Padding and font sizes are fixed in Studio UI <Tab> components.\n */\nexport type TabProps = Pick<\n  UITabProps,\n  'aria-controls' | 'focused' | 'icon' | 'id' | 'label' | 'selected' | 'tone'\n>\n\n/**\n * Customized Sanity UI <Tab> with limited layout options.\n *\n * @internal\n */\nexport const Tab = forwardRef(function Tab(\n  {tone = 'default', ...props}: TabProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  return <UITab {...props} muted padding={2} ref={ref} tone={tone} />\n})\n","export const TOOLTIP_DELAY_PROPS = {\n  open: 400,\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  Box,\n  Flex,\n  Hotkeys,\n  type HotkeysProps,\n  Text,\n  Tooltip as UITooltip,\n  type TooltipProps as UITooltipProps,\n} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {TOOLTIP_DELAY_PROPS} from './constants'\n\n/** @internal */\nexport type TooltipProps = Omit<UITooltipProps, 'arrow' | 'padding' | 'shadow'> & {\n  hotkeys?: HotkeysProps['keys']\n}\n\nconst TOOLTIP_SHARED_PROPS: UITooltipProps = {\n  animate: true,\n  arrow: false,\n  boundaryElement: null,\n  delay: TOOLTIP_DELAY_PROPS,\n  fallbackPlacements: ['bottom-start', 'bottom-end', 'top-start', 'top-end'],\n  placement: 'bottom',\n  portal: true,\n}\n\n/**\n * Customized Sanity UI <Tooltip> with limited layout options and support for showing hotkeys.\n *\n * In just about all cases, its strongly recommended that you pass a string to the `content` prop.\n * This helps simplify i18n and encourages short and concise.\n *\n * Passing ReactNode values to `content` is supported, but discouraged.\n *\n * @internal\n */\nexport const Tooltip = forwardRef(function Tooltip(\n  props: TooltipProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {content, hotkeys, ...rest} = props\n\n  if (typeof content === 'string') {\n    return (\n      <UITooltip\n        {...TOOLTIP_SHARED_PROPS}\n        content={\n          <Flex align=\"center\">\n            {content && (\n              <Box flex={1} padding={1}>\n                <Text size={1}>{content}</Text>\n              </Box>\n            )}\n            {hotkeys && (\n              <Box flex=\"none\">\n                <Hotkeys keys={hotkeys} />\n              </Box>\n            )}\n          </Flex>\n        }\n        padding={1}\n        ref={ref}\n        {...rest}\n      />\n    )\n  }\n\n  return <UITooltip {...TOOLTIP_SHARED_PROPS} content={content} ref={ref} {...rest} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  TooltipDelayGroupProvider as UITooltipDelayGroupProvider,\n  type TooltipDelayGroupProviderProps as UITooltipDelayGroupProviderProps,\n} from '@sanity/ui'\n\nimport {TOOLTIP_DELAY_PROPS} from '../tooltip/constants'\n\n/** @internal */\nexport type TooltipDelayGroupProviderProps = Omit<UITooltipDelayGroupProviderProps, 'delay'>\n\n/**\n * Opinionated Sanity UI <TooltipDelayGroupProvider> which forces the same delay to all tooltips.\n *\n * @internal\n */\nexport const TooltipDelayGroupProvider = (props: TooltipDelayGroupProviderProps) => {\n  return (\n    <UITooltipDelayGroupProvider delay={TOOLTIP_DELAY_PROPS}>\n      {props.children}\n    </UITooltipDelayGroupProvider>\n  )\n}\n","const BASE_URL = \"https://docs.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nexport { generateHelpUrl };\n//# sourceMappingURL=generate-help-url.esm.js.map\n"],"names":["UIButton","UIDialog","UIMenuButton","UIMenuGroup","UIMenuItem","UIPopover","UITab","UITooltip","UITooltipDelayGroupProvider"],"mappings":"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","x_google_ignoreList":[11]}