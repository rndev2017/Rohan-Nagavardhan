"use strict";
Object.defineProperty(exports, "__esModule", { value: !0 });
var React = require("react");
const ConnectorContext = React.createContext({
  isReviewChangesOpen: !1,
  onOpenReviewChanges: () => {
  },
  onSetFocus: () => {
  }
}), PreviewCardContext = React.createContext({ selected: !1 }), ScrollContext = React.createContext(null), zIndexContextDefaults = {
  navbar: 200,
  navbarPopover: 5e5,
  navbarDialog: 500001,
  // pane
  pane: 100,
  paneHeader: [110, 15e3],
  paneFooter: [120, 2e4],
  paneResizer: [130, 25e3],
  paneDialog: [140, 5e3],
  //
  popover: 200,
  modal: 200,
  movingItem: 1e4,
  drawershade: 1e6,
  drawer: 1000001,
  fullscreen: 12e5,
  toast: [100, 11e3],
  // NOT IN USE
  portal: 200,
  dropdown: 200,
  navbarFixed: 1010,
  fullscreenEdit: 1050,
  popoverBackground: 1060,
  tooltip: 200,
  modalBackground: 2e3,
  spinner: 3e3
}, ZIndexContext = React.createContext(zIndexContextDefaults), DiffContext = React.createContext({ path: [] }), DocumentChangeContext = React.createContext(null), DocumentIdContext = React.createContext(null), FieldActionsContext = React.createContext({
  actions: [],
  focused: !1,
  hovered: !1,
  onMouseEnter: () => {
  },
  onMouseLeave: () => {
  }
}), HoveredFieldContext = React.createContext({
  hoveredStack: [],
  onMouseEnter: () => {
  },
  onMouseLeave: () => {
  }
}), FormBuilderContext = React.createContext(null), FormValueContext = React.createContext(null), GetFormValueContext = React.createContext(null), VirtualizerScrollInstanceContext = React.createContext(
  null
), SortableItemIdContext = React.createContext(null), PortableTextMarkersContext = React.createContext([]), PortableTextMemberItemsContext = React.createContext([]), ReferenceItemRefContext = React.createContext(null), DocumentFieldActionsContext = React.createContext(
  null
), FormCallbacksContext = React.createContext(null), PresenceContext = React.createContext([]), ReferenceInputOptionsContext = React.createContext({}), ReviewChangesContext = React.createContext(null), ValidationContext = React.createContext([]), LocaleContext = React.createContext(void 0), FormFieldPresenceContext = React.createContext([]), DocumentActionPropsContext = React.createContext(void 0), ScheduledPublishingEnabledContext = React.createContext(null), SchedulePublishUpsellContext = React.createContext({
  upsellData: null,
  handleOpenDialog: () => null,
  upsellDialogOpen: !1,
  telemetryLogs: {
    dialogSecondaryClicked: () => null,
    dialogPrimaryClicked: () => null,
    panelViewed: () => null,
    panelDismissed: () => null,
    panelPrimaryClicked: () => null,
    panelSecondaryClicked: () => null
  }
}), SchedulesContext = React.createContext(void 0), ResourceCacheContext = React.createContext(null), ActiveWorkspaceMatcherContext = React.createContext(null), AddonDatasetContext = React.createContext(null), ColorSchemeSetValueContext = React.createContext(null), ColorSchemeValueContext = React.createContext(null), FreeTrialContext = React.createContext(void 0), CalendarContext = React.createContext(void 0), SearchContext = React.createContext(void 0), NavbarContext = React.createContext({
  onSearchFullscreenOpenChange: () => "",
  onSearchOpenChange: () => "",
  searchFullscreenOpen: !1,
  searchFullscreenPortalEl: null,
  searchOpen: !1
}), RouterHistoryContext = React.createContext(null), SourceContext = React.createContext(null), WorkspaceContext = React.createContext(null), WorkspacesContext = React.createContext(null), TasksEnabledContext = React.createContext({
  enabled: !1,
  mode: null
}), IsLastPaneContext = React.createContext(!1), MentionUserContext = React.createContext(null), TasksNavigationContext = React.createContext(null), TasksContext = React.createContext(null), TasksUpsellContext = React.createContext(null), UserColorManagerContext = React.createContext(null), RouterContext = React.createContext(null), CommentsAuthoringPathContext = React.createContext(
  null
), CommentsContext = React.createContext(null), CommentInputContext = React.createContext(null), CommentsEnabledContext = React.createContext({
  enabled: !1,
  mode: null
}), CommentsIntentContext = React.createContext(
  void 0
), CommentsOnboardingContext = React.createContext(null), CommentsSelectedPathContext = React.createContext(
  null
), CommentsUpsellContext = React.createContext(null), PaneContext = React.createContext(null), PaneLayoutContext = React.createContext(null);
function missingContext() {
  throw new Error("Pane is missing router context");
}
const PaneRouterContext = React.createContext({
  index: 0,
  groupIndex: 0,
  siblingIndex: 0,
  payload: void 0,
  params: {},
  hasGroupSiblings: !1,
  groupLength: 0,
  routerPanesState: [],
  BackLink: () => missingContext(),
  ChildLink: () => missingContext(),
  ReferenceChildLink: () => missingContext(),
  handleEditReference: () => missingContext(),
  ParameterizedLink: () => missingContext(),
  replaceCurrent: () => missingContext(),
  closeCurrentAndAfter: () => missingContext(),
  closeCurrent: () => missingContext(),
  duplicateCurrent: () => missingContext(),
  setView: () => missingContext(),
  setParams: () => missingContext(),
  setPayload: () => missingContext(),
  navigateIntent: () => missingContext(),
  createPathWithParams: () => missingContext()
}), DocumentPaneContext = React.createContext(null), StructureToolContext = React.createContext(null);
exports.ActiveWorkspaceMatcherContext = ActiveWorkspaceMatcherContext;
exports.AddonDatasetContext = AddonDatasetContext;
exports.CalendarContext = CalendarContext;
exports.ColorSchemeSetValueContext = ColorSchemeSetValueContext;
exports.ColorSchemeValueContext = ColorSchemeValueContext;
exports.CommentInputContext = CommentInputContext;
exports.CommentsAuthoringPathContext = CommentsAuthoringPathContext;
exports.CommentsContext = CommentsContext;
exports.CommentsEnabledContext = CommentsEnabledContext;
exports.CommentsIntentContext = CommentsIntentContext;
exports.CommentsOnboardingContext = CommentsOnboardingContext;
exports.CommentsSelectedPathContext = CommentsSelectedPathContext;
exports.CommentsUpsellContext = CommentsUpsellContext;
exports.ConnectorContext = ConnectorContext;
exports.DiffContext = DiffContext;
exports.DocumentActionPropsContext = DocumentActionPropsContext;
exports.DocumentChangeContext = DocumentChangeContext;
exports.DocumentFieldActionsContext = DocumentFieldActionsContext;
exports.DocumentIdContext = DocumentIdContext;
exports.DocumentPaneContext = DocumentPaneContext;
exports.FieldActionsContext = FieldActionsContext;
exports.FormBuilderContext = FormBuilderContext;
exports.FormCallbacksContext = FormCallbacksContext;
exports.FormFieldPresenceContext = FormFieldPresenceContext;
exports.FormValueContext = FormValueContext;
exports.FreeTrialContext = FreeTrialContext;
exports.GetFormValueContext = GetFormValueContext;
exports.HoveredFieldContext = HoveredFieldContext;
exports.IsLastPaneContext = IsLastPaneContext;
exports.LocaleContext = LocaleContext;
exports.MentionUserContext = MentionUserContext;
exports.NavbarContext = NavbarContext;
exports.PaneContext = PaneContext;
exports.PaneLayoutContext = PaneLayoutContext;
exports.PaneRouterContext = PaneRouterContext;
exports.PortableTextMarkersContext = PortableTextMarkersContext;
exports.PortableTextMemberItemsContext = PortableTextMemberItemsContext;
exports.PresenceContext = PresenceContext;
exports.PreviewCardContext = PreviewCardContext;
exports.ReferenceInputOptionsContext = ReferenceInputOptionsContext;
exports.ReferenceItemRefContext = ReferenceItemRefContext;
exports.ResourceCacheContext = ResourceCacheContext;
exports.ReviewChangesContext = ReviewChangesContext;
exports.RouterContext = RouterContext;
exports.RouterHistoryContext = RouterHistoryContext;
exports.SchedulePublishUpsellContext = SchedulePublishUpsellContext;
exports.ScheduledPublishingEnabledContext = ScheduledPublishingEnabledContext;
exports.SchedulesContext = SchedulesContext;
exports.ScrollContext = ScrollContext;
exports.SearchContext = SearchContext;
exports.SortableItemIdContext = SortableItemIdContext;
exports.SourceContext = SourceContext;
exports.StructureToolContext = StructureToolContext;
exports.TasksContext = TasksContext;
exports.TasksEnabledContext = TasksEnabledContext;
exports.TasksNavigationContext = TasksNavigationContext;
exports.TasksUpsellContext = TasksUpsellContext;
exports.UserColorManagerContext = UserColorManagerContext;
exports.ValidationContext = ValidationContext;
exports.VirtualizerScrollInstanceContext = VirtualizerScrollInstanceContext;
exports.WorkspaceContext = WorkspaceContext;
exports.WorkspacesContext = WorkspacesContext;
exports.ZIndexContext = ZIndexContext;
exports.zIndexContextDefaults = zIndexContextDefaults;
//# sourceMappingURL=_singletons.js.map
