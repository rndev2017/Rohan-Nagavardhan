{"version":3,"file":"_singletons.js","sources":["../src/_singletons/core/changeIndicators/ConnectorContext.ts","../src/_singletons/core/components/previewCard/PreviewCardContext.ts","../src/_singletons/core/components/scroll/scrollContext.ts","../src/_singletons/core/components/zOffsets/zIndexContextDefaults.ts","../src/_singletons/core/components/zOffsets/ZIndexContext.ts","../src/_singletons/core/field/diff/DiffContext.ts","../src/_singletons/core/field/diff/DocumentChangeContext.ts","../src/_singletons/core/form/DocumentIdContext.ts","../src/_singletons/core/form/field/actions/FieldActionsContext.ts","../src/_singletons/core/form/field/HoveredFieldContext.ts","../src/_singletons/core/form/FormBuilderContext.ts","../src/_singletons/core/form/FormValueContext.ts","../src/_singletons/core/form/GetFormValueContext.ts","../src/_singletons/core/form/inputs/arrays/ArrayOfObjectsInput/List/VirtualizerScrollInstanceContext.ts","../src/_singletons/core/form/inputs/arrays/common/SortableItemIdContext.ts","../src/_singletons/core/form/inputs/PortableText/PortableTextMarkersContext.ts","../src/_singletons/core/form/inputs/PortableText/PortableTextMemberItemsContext.ts","../src/_singletons/core/form/inputs/ReferenceInput/ReferenceItemRefContext.ts","../src/_singletons/core/form/studio/DocumentFieldActionsContext.ts","../src/_singletons/core/form/studio/FormCallbacksContext.ts","../src/_singletons/core/form/studio/PresenceContext.ts","../src/_singletons/core/form/studio/ReferenceInputOptionsContext.ts","../src/_singletons/core/form/studio/reviewChanges/ReviewChangesContext.ts","../src/_singletons/core/form/studio/ValidationContext.ts","../src/_singletons/core/i18n/LocaleContext.ts","../src/_singletons/core/presence/FormFieldPresenceContext.ts","../src/_singletons/core/schedulePublishing/DocumentActionPropsContext.ts","../src/_singletons/core/schedulePublishing/tool/ScheduledPublishingEnabledContext.ts","../src/_singletons/core/schedulePublishing/tool/SchedulePublishingUpsellContext.ts","../src/_singletons/core/schedulePublishing/tool/Schedules.ts","../src/_singletons/core/store/_legacy/ResourceCacheContext.ts","../src/_singletons/core/studio/activeWorkspaceMatcher/ActiveWorkspaceMatcherContext.ts","../src/_singletons/core/studio/addonDataset/AddonDatasetContext.ts","../src/_singletons/core/studio/ColorSchemeSetValueContext.ts","../src/_singletons/core/studio/ColorSchemeValueContext.ts","../src/_singletons/core/studio/components/navbar/free-trial/FreeTrialContext.ts","../src/_singletons/core/studio/components/navbar/search/components/filters/filter/inputs/date/datePicker/calendar/CalendarContext.ts","../src/_singletons/core/studio/components/navbar/search/SearchContext.ts","../src/_singletons/core/studio/NavbarContext.ts","../src/_singletons/core/studio/router/RouterHistoryContext.ts","../src/_singletons/core/studio/SourceContext.ts","../src/_singletons/core/studio/WorkspaceContext.ts","../src/_singletons/core/studio/workspaces/WorkspacesContext.ts","../src/_singletons/core/tasks/enabled/TasksEnabledContext.ts","../src/_singletons/core/tasks/isLastPane/IsLastPaneContext.ts","../src/_singletons/core/tasks/mentionUser/MentionUserContext.ts","../src/_singletons/core/tasks/navigation/TasksNavigationContext.ts","../src/_singletons/core/tasks/tasks/TasksContext.ts","../src/_singletons/core/tasks/tasks/TasksUpsellContext.ts","../src/_singletons/core/user-color/UserColorManagerContext.ts","../src/_singletons/router/RouterContext.ts","../src/_singletons/structure/comments/authoring-path/CommentsAuthoringPathContext.ts","../src/_singletons/structure/comments/CommentsContext.ts","../src/_singletons/structure/comments/components/pte/comment-input/CommentInputContext.ts","../src/_singletons/structure/comments/enabled/CommentsEnabledContext.ts","../src/_singletons/structure/comments/intent/CommentsIntentContext.ts","../src/_singletons/structure/comments/onboarding/CommentsOnboardingContext.ts","../src/_singletons/structure/comments/selected-path/CommentsSelectedPathContext.ts","../src/_singletons/structure/comments/upsell/CommentsUpsellContext.ts","../src/_singletons/structure/components/pane/PaneContext.ts","../src/_singletons/structure/components/pane/PaneLayoutContext.ts","../src/_singletons/structure/components/paneRouter/PaneRouterContext.tsx","../src/_singletons/structure/panes/document/DocumentPaneContext.ts","../src/_singletons/structure/StructureToolContext.ts"],"sourcesContent":["import {createContext} from 'react'\n\nimport type {ConnectorContextValue} from '../../../core/changeIndicators/ConnectorContext'\n\n/** @internal */\nexport const ConnectorContext = createContext<ConnectorContextValue>({\n  isReviewChangesOpen: false,\n  onOpenReviewChanges: () => undefined,\n  onSetFocus: () => undefined,\n} as ConnectorContextValue)\n","import {createContext} from 'react'\n\nimport type {PreviewCardContextValue} from '../../../../core/components/previewCard/PreviewCard'\n\n/**\n * @internal\n */\nexport const PreviewCardContext = createContext<PreviewCardContextValue>({selected: false})\n","import type {PubSub} from 'nano-pubsub'\nimport {createContext} from 'react'\n\n/**\n * @internal\n */\nexport const ScrollContext = createContext<null | PubSub<Event>>(null)\n","import type {ZIndexContextValue} from '../../../../core/components/zOffsets/types'\n\n/**\n * @internal\n */\nexport const zIndexContextDefaults: ZIndexContextValue = {\n  navbar: 200,\n  navbarPopover: 500000,\n  navbarDialog: 500001,\n\n  // pane\n  pane: 100,\n  paneHeader: [110, 15000],\n  paneFooter: [120, 20000],\n  paneResizer: [130, 25000],\n  paneDialog: [140, 5000],\n\n  //\n  popover: 200,\n  modal: 200,\n  movingItem: 10000,\n  drawershade: 1000000,\n  drawer: 1000001,\n  fullscreen: 1200000,\n  toast: [100, 11000],\n\n  // NOT IN USE\n  portal: 200,\n  dropdown: 200,\n  navbarFixed: 1010,\n  fullscreenEdit: 1050,\n  popoverBackground: 1060,\n  tooltip: 200,\n  modalBackground: 2000,\n  spinner: 3000,\n}\n","import {createContext} from 'react'\n\nimport type {ZIndexContextValue} from '../../../../core/components/zOffsets/types'\nimport {zIndexContextDefaults} from './zIndexContextDefaults'\n\n/**\n * TODO: Rename to `ZOffsetsContext`\n *\n * @internal\n */\nexport const ZIndexContext = createContext<ZIndexContextValue>(zIndexContextDefaults)\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'react'\n\n/** @internal */\nexport const DiffContext = createContext<{path: Path}>({path: []})\n","import {createContext} from 'react'\n\nimport type {DocumentChangeContextInstance} from '../../../../core/field/diff/contexts/DocumentChangeContext'\n\n/** @internal */\nexport const DocumentChangeContext = createContext<DocumentChangeContextInstance | null>(null)\n","import {createContext} from 'react'\n\n/**\n * @internal\n */\nexport interface DocumentIdContextValue {\n  id: string\n}\n\n/**\n * @internal\n */\nexport const DocumentIdContext = createContext<DocumentIdContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {DocumentFieldActionNode} from '../../../../../core/config/document/fieldActions/types'\n\n/** @internal */\nexport interface FieldActionsContextValue {\n  actions: DocumentFieldActionNode[]\n  focused?: boolean\n  hovered: boolean\n  onMouseEnter: () => void\n  onMouseLeave: () => void\n}\n\n/** @internal */\nexport const FieldActionsContext = createContext<FieldActionsContextValue>({\n  actions: [],\n  focused: false,\n  hovered: false,\n  onMouseEnter: () => undefined,\n  onMouseLeave: () => undefined,\n})\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'react'\n\n/** @internal */\nexport interface HoveredFieldContextValue {\n  hoveredStack: string[]\n  onMouseEnter: (path: Path) => void\n  onMouseLeave: (path: Path) => void\n}\n\n/** @internal */\nexport const HoveredFieldContext = createContext<HoveredFieldContextValue>({\n  hoveredStack: [],\n  onMouseEnter: () => undefined,\n  onMouseLeave: () => undefined,\n})\n","import {createContext} from 'react'\n\nimport type {FormBuilderContextValue} from '../../../core/form/FormBuilderContext'\n\n/**\n * @internal\n */\nexport const FormBuilderContext = createContext<FormBuilderContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {FormValueContextValue} from '../../../core/form/contexts/FormValue'\n\n/**\n * @internal\n */\nexport const FormValueContext = createContext<FormValueContextValue | null>(null)\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'react'\n\n/**\n * @internal\n * @hidden\n */\nexport type GetFormValueContextValue = (path: Path) => unknown\n\n/**\n * @internal\n */\nexport const GetFormValueContext = createContext<GetFormValueContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {VirtualizerScrollInstance} from '../../../../../../../core/form/inputs/arrays/ArrayOfObjectsInput/List/useVirtualizerScrollInstance'\n\n/**\n * This is used to store the reference to the scroll element for virtualizer\n * @internal\n */\nexport const VirtualizerScrollInstanceContext = createContext<VirtualizerScrollInstance | null>(\n  null,\n)\n","import {createContext} from 'react'\n\n/**\n * @internal\n */\nexport const SortableItemIdContext = createContext<string | null>(null)\n","import {createContext} from 'react'\n\nimport type {PortableTextMarker} from '../../../../../core/form/types/_transitional'\n\n/**\n * @internal\n */\nexport const PortableTextMarkersContext = createContext<PortableTextMarker[]>([])\n","import {createContext} from 'react'\n\nimport type {PortableTextMemberItem} from '../../../../../core/form/inputs/PortableText/PortableTextInput'\n\n/**\n * @internal\n */\nexport const PortableTextMemberItemsContext = createContext<PortableTextMemberItem[]>([])\n","/* eslint-disable import/no-duplicates */\nimport type {MutableRefObject} from 'react'\nimport {createContext} from 'react'\n\n/**\n * @internal\n */\nexport interface ReferenceItemRef {\n  menuRef: MutableRefObject<HTMLDivElement | null>\n  containerRef: MutableRefObject<HTMLDivElement | null>\n}\n\n/**\n * This is a way to store ref of the menu as well as the container of the ReferenceItem\n * so it can be used down the tree for clickOutside handling\n * @internal\n */\nexport const ReferenceItemRefContext = createContext<ReferenceItemRef | null>(null)\n","import {createContext} from 'react'\n\nimport type {DocumentFieldAction} from '../../../../core/config/document/fieldActions/types'\n\n/**\n * @internal\n */\nexport interface DocumentFieldActionsContextValue {\n  actions: DocumentFieldAction[]\n}\n\n/**\n * @internal\n */\nexport const DocumentFieldActionsContext = createContext<DocumentFieldActionsContextValue | null>(\n  null,\n)\n","import {createContext} from 'react'\n\nimport type {FormCallbacksValue} from '../../../../core/form/studio/contexts/FormCallbacks'\n\n/**\n * @internal\n */\nexport const FormCallbacksContext = createContext<FormCallbacksValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {FormNodePresence} from '../../../../core/presence/types'\n\n/**\n * @internal\n */\nexport const PresenceContext = createContext<FormNodePresence[]>([])\n","import {createContext} from 'react'\n\nimport type {ReferenceInputOptions} from '../../../../core/form/studio/contexts/ReferenceInputOptions'\n\n/**\n * @internal\n */\nexport const ReferenceInputOptionsContext = createContext<ReferenceInputOptions>({})\n","import {createContext} from 'react'\n\nimport type {ReviewChangesContextValue} from '../../../../../core/form/studio/contexts/reviewChanges/types'\n\n/**\n * @internal\n */\nexport const ReviewChangesContext = createContext<ReviewChangesContextValue | null>(null)\n","import type {ValidationMarker} from '@sanity/types'\nimport {createContext} from 'react'\n\n/**\n * @internal\n */\nexport const ValidationContext = createContext<ValidationMarker[]>([])\n","import type {i18n} from 'i18next'\nimport {createContext} from 'react'\n\nimport type {Locale} from '../../../core/i18n/types'\n\n/**\n * @internal\n * @hidden\n */\nexport interface LocaleContextValue {\n  locales: Locale[]\n  currentLocale: Locale\n  __internal: {i18next: i18n}\n  changeLocale: (newLocale: string) => Promise<void>\n}\n\n/**\n * @internal\n * @hidden\n */\nexport const LocaleContext = createContext<LocaleContextValue | undefined>(undefined)\n","import {createContext} from 'react'\n\nimport type {FormNodePresence} from '../../../core/presence/types'\n\n/** @internal */\nexport const FormFieldPresenceContext = createContext<FormNodePresence[]>([])\n","import {createContext} from 'react'\n\nimport type {DocumentActionProps} from '../../../core/config/document/actions'\n\n/**\n * @internal\n */\nexport const DocumentActionPropsContext = createContext<DocumentActionProps | undefined>(undefined)\n","import {createContext} from 'react'\n\nimport type {ScheduledPublishingEnabledContextValue} from '../../../../core/scheduledPublishing/tool/contexts/ScheduledPublishingEnabledProvider'\n\n/**\n * @internal\n */\nexport const ScheduledPublishingEnabledContext =\n  createContext<ScheduledPublishingEnabledContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {SchedulePublishUpsellContextValue} from '../../../../core/scheduledPublishing/tool/contexts/SchedulePublishingUpsellProvider'\n\n/**\n * @internal\n */\nexport const SchedulePublishUpsellContext = createContext<SchedulePublishUpsellContextValue>({\n  upsellData: null,\n  handleOpenDialog: () => null,\n  upsellDialogOpen: false,\n  telemetryLogs: {\n    dialogSecondaryClicked: () => null,\n    dialogPrimaryClicked: () => null,\n    panelViewed: () => null,\n    panelDismissed: () => null,\n    panelPrimaryClicked: () => null,\n    panelSecondaryClicked: () => null,\n  },\n})\n","import {createContext} from 'react'\n\nimport type {SchedulesContextValue} from '../../../../core/scheduledPublishing/tool/contexts/schedules'\n\n/**\n * @internal\n */\nexport const SchedulesContext = createContext<SchedulesContextValue | undefined>(undefined)\n","import {createContext} from 'react'\n\nimport type {ResourceCache} from '../../../../core/store/_legacy/ResourceCacheProvider'\n\n/**\n * @internal\n */\nexport const ResourceCacheContext = createContext<ResourceCache | null>(null)\n","import {createContext} from 'react'\n\nimport type {ActiveWorkspaceMatcherContextValue} from '../../../../core/studio/activeWorkspaceMatcher/ActiveWorkspaceMatcherContext'\n\n/** @internal */\nexport const ActiveWorkspaceMatcherContext =\n  createContext<ActiveWorkspaceMatcherContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {AddonDatasetContextValue} from '../../../../core/studio/addonDataset/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const AddonDatasetContext = createContext<AddonDatasetContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {StudioThemeColorSchemeKey} from '../../../core/theme/types'\n\n/**\n * The setter for ColorSchemeValueContext, in a separate context to avoid unnecessary re-renders\n * If set to false then the UI should adjust to reflect that the Studio can't change the color scheme\n * @internal\n */\nexport const ColorSchemeSetValueContext = createContext<\n  ((nextScheme: StudioThemeColorSchemeKey) => void) | false | null\n>(null)\n","import {createContext} from 'react'\n\nimport type {StudioThemeColorSchemeKey} from '../../../core/theme/types'\n\n/**\n * Used to keep track of the internal value, which can be \"system\" in addition to \"light\" and \"dark\"\n * @internal\n */\nexport const ColorSchemeValueContext = createContext<StudioThemeColorSchemeKey | null>(null)\n","import {createContext} from 'react'\n\nimport type {FreeTrialContextProps} from '../../../../../../core/studio/components/navbar/free-trial/FreeTrialContext'\n\n/**\n * @internal\n */\nexport const FreeTrialContext = createContext<FreeTrialContextProps | undefined>(undefined)\n","import {createContext} from 'react'\n\nimport type {CalendarContextValue} from '../../../../../../../../../../../../../core/studio/components/navbar/search/components/filters/filter/inputs/date/datePicker/calendar/contexts/CalendarContext'\n\n/**\n * @internal\n */\nexport const CalendarContext = createContext<CalendarContextValue | undefined>(undefined)\n","import {createContext} from 'react'\n\nimport type {SearchContextValue} from '../../../../../../core/studio/components/navbar/search/contexts/search/SearchContext'\n\n/**\n * @internal\n */\nexport const SearchContext = createContext<SearchContextValue | undefined>(undefined)\n","import {createContext} from 'react'\n\nimport type {NavbarContextValue} from '../../../core/studio/StudioLayout'\n\n/** @internal */\nexport const NavbarContext = createContext<NavbarContextValue>({\n  onSearchFullscreenOpenChange: () => '',\n  onSearchOpenChange: () => '',\n  searchFullscreenOpen: false,\n  searchFullscreenPortalEl: null,\n  searchOpen: false,\n})\n","import {createContext} from 'react'\n\nimport type {RouterHistory} from '../../../../core/studio/router'\n\n/**\n * Internal use only. Userland should leverage the public `useRouter` APIs.\n * @internal\n */\nexport const RouterHistoryContext = createContext<RouterHistory | null>(null)\n","import {createContext} from 'react'\n\nimport type {Source} from '../../../core/config/types'\n\n/**\n * @internal\n */\nexport const SourceContext = createContext<Source | null>(null)\n","import {createContext} from 'react'\n\nimport type {Workspace} from '../../../core/config/types'\n\n/**\n * @internal\n */\nexport const WorkspaceContext = createContext<Workspace | null>(null)\n","import {createContext} from 'react'\n\nimport type {WorkspacesContextValue} from '../../../../core/studio/workspaces/WorkspacesContext'\n\n/** @internal */\nexport const WorkspacesContext = createContext<WorkspacesContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {TasksEnabledContextValue} from '../../../../core/tasks/context/enabled/types'\n\n// NOTE: We initialize this context with a default value (`enabled: false`)\n// rather than `null` to handle cases where the tasks feature's availability\n// isn't explicitly provided by a surrounding provider component. Typically,\n// Tasks are included by default in all new Studio configurations. Therefore,\n// in the absence of a specific provider (TasksEnabledProvider), we assume that\n// the feature is disabled.\n/**\n * @internal\n */\nexport const TasksEnabledContext = createContext<TasksEnabledContextValue>({\n  enabled: false,\n  mode: null,\n})\n","import {createContext} from 'react'\n\n/**\n * TODO: remove this context when alternate document-specific context are\n * introduced.\n *\n * The following context is used in the structure tool to set the active\n * document if it's the last pane open in the structure tool. This is a\n * temporary context provider that was introduced when the comments and tasks\n * plugins were refactor and decoupled from the structure tool. ideally this\n * should be removed and replaced with a document-specific context that gives\n * plugin authors access to what the `usePane`, `usePaneRouter`, and\n * `useDocumentPane` provides without exposing specifics from the structure tool\n */\n/**\n * @internal\n */\nexport const IsLastPaneContext = createContext<boolean>(false)\n","import {createContext} from 'react'\n\nimport type {MentionUserContextValue} from '../../../../core/tasks/context/mentionUser/types'\n\n/**\n * @internal\n */\nexport const MentionUserContext = createContext<MentionUserContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {TasksNavigationContextValue} from '../../../../core/tasks/context/navigation/types'\n\n/**\n * @internal\n */\nexport const TasksNavigationContext = createContext<TasksNavigationContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {TasksContextValue} from '../../../../core/tasks/context/tasks/types'\n\n/**\n * @internal\n */\nexport const TasksContext = createContext<TasksContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {TasksUpsellContextValue} from '../../../../core/tasks/context/upsell/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const TasksUpsellContext = createContext<TasksUpsellContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {UserColorManager} from '../../../core/user-color/types'\n\n/**\n * @internal\n */\nexport const UserColorManagerContext = createContext<UserColorManager | null>(null)\n","import {createContext} from 'react'\n\nimport type {RouterContextValue} from '../../router/types'\n\n/**\n * @internal\n */\nexport const RouterContext = createContext<RouterContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {CommentsAuthoringPathContextValue} from '../../../../core/comments/context/authoring-path/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const CommentsAuthoringPathContext = createContext<CommentsAuthoringPathContextValue | null>(\n  null,\n)\n","import {createContext} from 'react'\n\nimport type {CommentsContextValue} from '../../../core/comments/context/comments/types'\n\n/**\n * @internal\n */\nexport const CommentsContext = createContext<CommentsContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {CommentInputContextValue} from '../../../../../../core/comments/components/pte/comment-input/CommentInputProvider'\n\n/**\n * @internal\n */\nexport const CommentInputContext = createContext<CommentInputContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {CommentsEnabledContextValue} from '../../../../core/comments/context/enabled/types'\n\n// NOTE: We initialize this context with a default value (`enabled: false`)\n// rather than `null` to handle cases where the comments feature's availability\n// isn't explicitly provided by a surrounding provider component. Typically,\n// comments functionality is included by default in all new studio\n// configurations. Therefore, in the absence of a specific provider\n// (CommentsEnabledProvider), we assume that the feature is disabled.\n/**\n * @internal\n */\nexport const CommentsEnabledContext = createContext<CommentsEnabledContextValue>({\n  enabled: false,\n  mode: null,\n})\n","import {createContext} from 'react'\n\nimport type {CommentsIntentContextValue} from '../../../../core/comments/context/intent/types'\n\n/**\n * @internal\n */\nexport const CommentsIntentContext = createContext<CommentsIntentContextValue | undefined>(\n  undefined,\n)\n","import {createContext} from 'react'\n\nimport type {CommentsOnboardingContextValue} from '../../../../core/comments/context/onboarding/types'\n\n/**\n * @internal\n */\nexport const CommentsOnboardingContext = createContext<CommentsOnboardingContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {CommentsSelectedPathContextValue} from '../../../../core/comments/context/selected-path/types'\n\n/**\n * @internal\n */\nexport const CommentsSelectedPathContext = createContext<CommentsSelectedPathContextValue | null>(\n  null,\n)\n","import {createContext} from 'react'\n\nimport type {CommentsUpsellContextValue} from '../../../../core/comments/context/upsell/types'\n\n/**\n * @internal\n */\nexport const CommentsUpsellContext = createContext<CommentsUpsellContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {PaneContextValue} from '../../../../structure/components/pane/types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {PaneLayoutContextValue} from '../../../../structure/components/pane/types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {PaneRouterContextValue} from '../../../../structure/components/paneRouter/types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>({\n  index: 0,\n  groupIndex: 0,\n  siblingIndex: 0,\n  payload: undefined,\n  params: {},\n  hasGroupSiblings: false,\n  groupLength: 0,\n  routerPanesState: [],\n  BackLink: () => missingContext(),\n  ChildLink: () => missingContext(),\n  ReferenceChildLink: () => missingContext(),\n  handleEditReference: () => missingContext(),\n  ParameterizedLink: () => missingContext(),\n  replaceCurrent: () => missingContext(),\n  closeCurrentAndAfter: () => missingContext(),\n  closeCurrent: () => missingContext(),\n  duplicateCurrent: () => missingContext(),\n  setView: () => missingContext(),\n  setParams: () => missingContext(),\n  setPayload: () => missingContext(),\n  navigateIntent: () => missingContext(),\n  createPathWithParams: () => missingContext(),\n})\n","import {createContext} from 'react'\n\nimport type {DocumentPaneContextValue} from '../../../../structure/panes/document/DocumentPaneContext'\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(null)\n","import {createContext} from 'react'\n\nimport type {StructureToolContextValue} from '../../structure/types'\n\n/**\n * @internal\n */\nexport const StructureToolContext = createContext<StructureToolContextValue | null>(null)\n"],"names":["createContext"],"mappings":"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"}