{"version":3,"file":"deleteApiAction.js","sources":["../../src/_internal/cli/actions/graphql/deleteApiAction.ts"],"sourcesContent":["import {type CliCommandArguments, type CliCommandContext} from '@sanity/cli'\nimport {type SanityClient} from '@sanity/client'\nimport {hideBin} from 'yargs/helpers'\nimport yargs from 'yargs/yargs'\n\nimport {getGraphQLAPIs} from './getGraphQLAPIs'\n\nexport interface DeleteGraphQLApiFlags {\n  project?: string\n  dataset?: string\n  tag?: string\n  force?: boolean\n}\n\nfunction parseCliFlags(args: {argv?: string[]}) {\n  return yargs(hideBin(args.argv || process.argv).slice(2))\n    .option('api', {type: 'string'})\n    .option('project', {type: 'string'})\n    .option('dataset', {type: 'string'})\n    .option('tag', {type: 'string', default: 'default'})\n    .option('force', {type: 'boolean'}).argv\n}\n\nexport default async function deleteGraphQLApi(\n  args: CliCommandArguments<DeleteGraphQLApiFlags>,\n  context: CliCommandContext,\n): Promise<void> {\n  // Reparsing CLI flags for better control of binary flags\n  const flags = await parseCliFlags(args)\n  const {apiClient, output, prompt} = context\n\n  // Use explicitly defined flags where possible\n  let projectId = flags.project\n  let dataset = flags.dataset\n  let tag = flags.tag\n\n  // If specifying --api, use it for the flags not provided\n  if (flags.api) {\n    const apiDefs = await getGraphQLAPIs(context)\n    const apiDef = apiDefs.find((def) => def.id === flags.api)\n    if (!apiDef) {\n      throw new Error(`GraphQL API \"${flags.api}\" not found`)\n    }\n\n    if (projectId) {\n      output.warn(`Both --api and --project specified, using --project ${projectId}`)\n    } else {\n      projectId = apiDef.projectId\n    }\n\n    if (dataset) {\n      output.warn(`Both --api and --dataset specified, using --dataset ${dataset}`)\n    } else {\n      dataset = apiDef.dataset\n    }\n\n    if (tag && apiDef.tag) {\n      output.warn(`Both --api and --tag specified, using --tag ${tag}`)\n    } else {\n      tag = apiDef.tag || 'default'\n    }\n  }\n\n  // If neither --api nor --project/dataset is specified, use the CLI config for values\n  let client: SanityClient\n  if (!projectId || !dataset) {\n    client = apiClient({\n      requireUser: true,\n      requireProject: true,\n    }).config({apiVersion: '2023-08-01'})\n\n    projectId = projectId || client.config().projectId\n    dataset = dataset || client.config().dataset\n  } else {\n    client = apiClient({requireProject: false, requireUser: true}).config({projectId, dataset})\n  }\n\n  const confirmMessage =\n    tag === 'default'\n      ? `Are you absolutely sure you want to delete the current GraphQL API connected to the \"${dataset}\" dataset in project ${projectId}?`\n      : `Are you absolutely sure you want to delete the GraphQL API connected to the \"${dataset}\" dataset in project ${projectId}, tagged \"${tag}\"?`\n\n  const confirmedDelete =\n    flags.force ||\n    (await prompt.single({\n      type: 'confirm',\n      message: confirmMessage,\n      default: false,\n    }))\n\n  if (!confirmedDelete) {\n    return\n  }\n\n  if (projectId !== client.config().projectId) {\n    client = client.clone().config({projectId})\n  }\n\n  try {\n    await client.request({\n      url: `/apis/graphql/${dataset}/${tag}`,\n      method: 'DELETE',\n    })\n  } catch (err) {\n    throw err\n  }\n\n  output.print('GraphQL API deleted')\n}\n"],"names":["yargs","hideBin","getGraphQLAPIs"],"mappings":";;;;;;AAcA,SAAS,cAAc,MAAyB;AACvC,SAAAA,eAAA,QAAMC,gBAAQ,KAAK,QAAQ,QAAQ,IAAI,EAAE,MAAM,CAAC,CAAC,EACrD,OAAO,OAAO,EAAC,MAAM,SAAA,CAAS,EAC9B,OAAO,WAAW,EAAC,MAAM,SAAA,CAAS,EAClC,OAAO,WAAW,EAAC,MAAM,SAAS,CAAA,EAClC,OAAO,OAAO,EAAC,MAAM,UAAU,SAAS,UAAA,CAAU,EAClD,OAAO,SAAS,EAAC,MAAM,WAAU,EAAE;AACxC;AAE8B,eAAA,iBAC5B,MACA,SACe;AAET,QAAA,QAAQ,MAAM,cAAc,IAAI,GAChC,EAAC,WAAW,QAAQ,OAAU,IAAA;AAGpC,MAAI,YAAY,MAAM,SAClB,UAAU,MAAM,SAChB,MAAM,MAAM;AAGhB,MAAI,MAAM,KAAK;AAEP,UAAA,UADU,MAAMC,eAAA,eAAe,OAAO,GACrB,KAAK,CAAC,QAAQ,IAAI,OAAO,MAAM,GAAG;AACzD,QAAI,CAAC;AACH,YAAM,IAAI,MAAM,gBAAgB,MAAM,GAAG,aAAa;AAGpD,gBACF,OAAO,KAAK,uDAAuD,SAAS,EAAE,IAE9E,YAAY,OAAO,WAGjB,UACF,OAAO,KAAK,uDAAuD,OAAO,EAAE,IAE5E,UAAU,OAAO,SAGf,OAAO,OAAO,MAChB,OAAO,KAAK,+CAA+C,GAAG,EAAE,IAEhE,MAAM,OAAO,OAAO;AAAA,EAExB;AAGI,MAAA;AACA,GAAC,aAAa,CAAC,WACjB,SAAS,UAAU;AAAA,IACjB,aAAa;AAAA,IACb,gBAAgB;AAAA,EACjB,CAAA,EAAE,OAAO,EAAC,YAAY,aAAY,CAAC,GAEpC,YAAY,aAAa,OAAO,OAAO,EAAE,WACzC,UAAU,WAAW,OAAO,SAAS,WAErC,SAAS,UAAU,EAAC,gBAAgB,IAAO,aAAa,GAAA,CAAK,EAAE,OAAO,EAAC,WAAW,QAAQ,CAAA;AAG5F,QAAM,iBACJ,QAAQ,YACJ,wFAAwF,OAAO,wBAAwB,SAAS,MAChI,gFAAgF,OAAO,wBAAwB,SAAS,aAAa,GAAG;AAU9I,MAPE,MAAM,SACL,MAAM,OAAO,OAAO;AAAA,IACnB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,EAAA,CACV,GAMH;AAAI,kBAAc,OAAO,OAAO,EAAE,cAChC,SAAS,OAAO,MAAQ,EAAA,OAAO,EAAC,UAAA,CAAU;AAGxC,QAAA;AACF,YAAM,OAAO,QAAQ;AAAA,QACnB,KAAK,iBAAiB,OAAO,IAAI,GAAG;AAAA,QACpC,QAAQ;AAAA,MAAA,CACT;AAAA,aACM,KAAK;AACN,YAAA;AAAA,IACR;AAEA,WAAO,MAAM,qBAAqB;AAAA,EAAA;AACpC;;"}