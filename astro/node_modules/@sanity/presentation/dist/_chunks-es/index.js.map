{"version":3,"file":"index.js","sources":["../../src/constants.ts","../../src/useDocumentLocations.ts","../../src/i18n/index.ts","../../src/PresentationContext.ts","../../src/usePresentationTool.ts","../../src/document/LocationsBanner.tsx","../../src/document/useCurrentPresentationToolName.ts","../../src/document/PresentationDocumentContext.ts","../../src/document/PresentationDocumentHeader.tsx","../../src/document/PresentationDocumentProvider.tsx","../../src/fieldActions/openInStructure.ts","../../src/getIntentState.ts","../../src/router.ts","../../src/plugin.tsx","../../src/PresentationNavigateContext.ts","../../src/usePresentationNavigate.ts","../../src/PresentationParamsContext.ts","../../src/usePresentationParams.ts"],"sourcesContent":["import {ComposeIcon} from '@sanity/icons'\n\nexport const DEFAULT_TOOL_ICON = ComposeIcon\nexport const DEFAULT_TOOL_NAME = 'presentation'\nexport const DEFAULT_TOOL_TITLE = 'Presentation'\n\n// @todo import from core sanity package\nexport const COMMENTS_INSPECTOR_NAME = 'sanity/structure/comments'\n\nexport const EDIT_INTENT_MODE = 'presentation'\n\n// How long we wait until an iframe is loaded until we consider it to be slow and possibly failed\nexport const MAX_TIME_TO_OVERLAYS_CONNECTION = 3000 // ms\n\n// The API version to use when using `@sanity/client`\nexport const API_VERSION = '2023-10-16'\n\n// Heartbeats shouldn't fire on intervals that are so short it causes performance issues\nexport const MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL = 1000 // ms\n\n// Batch size for fetching documents building up the cache\nexport const LIVE_QUERY_CACHE_BATCH_SIZE = 100\n\n// Total cache size for documents that are live queried\nexport const LIVE_QUERY_CACHE_SIZE = 2048\n","import {useEffect, useMemo, useState} from 'react'\nimport {isObservable, map, type Observable, of} from 'rxjs'\nimport {type SanityDocument} from 'sanity'\n\nimport {useDocumentStore} from './internals'\nimport type {\n  DocumentLocationResolver,\n  DocumentLocationResolvers,\n  DocumentLocationsState,\n  DocumentLocationsStatus,\n} from './types'\n\nconst INITIAL_STATE: DocumentLocationsState = {locations: []}\n\nexport function useDocumentLocations(props: {\n  id: string\n  resolvers?: DocumentLocationResolver | DocumentLocationResolvers\n  type: string\n}): {\n  state: DocumentLocationsState\n  status: DocumentLocationsStatus\n} {\n  const {id, resolvers, type} = props\n  const documentStore = useDocumentStore()\n  const [locationsState, setLocationsState] = useState<DocumentLocationsState>(INITIAL_STATE)\n\n  const resolver = resolvers && (typeof resolvers === 'function' ? resolvers : resolvers[type])\n\n  const [locationsStatus, setLocationsStatus] = useState<DocumentLocationsStatus>(\n    resolver ? 'resolving' : 'empty',\n  )\n\n  const result = useMemo(() => {\n    if (!resolver) return undefined\n\n    // Original/advanced resolver which requires explicit use of Observables\n    if (typeof resolver === 'function') {\n      const params = {id, type}\n      const context = {documentStore}\n      const _result = resolver(params, context)\n      return isObservable(_result) ? _result : of(_result)\n    }\n\n    // Simplified resolver pattern which abstracts away Observable logic\n    if ('select' in resolver && 'resolve' in resolver) {\n      const projection = Object.entries(resolver.select)\n        .map(([key, value]) => `\"${key}\": ${value}`)\n        .join(', ')\n      const query = `*[_id==$id][0]{${projection}}`\n      const params = {id}\n      const doc$ = documentStore.listenQuery(query, params, {\n        perspective: 'previewDrafts',\n      }) as Observable<SanityDocument | null>\n      return doc$.pipe(map(resolver.resolve))\n    }\n\n    // Resolver is explicitly provided state\n    return of(resolver)\n  }, [documentStore, id, resolver, type])\n\n  useEffect(() => {\n    const sub = result?.subscribe((state) => {\n      setLocationsState(state || INITIAL_STATE)\n      setLocationsStatus(state ? 'resolved' : 'empty')\n    })\n\n    return () => sub?.unsubscribe()\n  }, [result])\n\n  return {\n    state: locationsState,\n    status: locationsStatus,\n  }\n}\n","import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the presentation tool\n *\n * @public\n */\nexport const presentationLocaleNamespace = 'presentation' as const\n\n/**\n * The default locale bundle for the presentation tool, which is US English.\n *\n * @internal\n */\nexport const presentationUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: presentationLocaleNamespace,\n  resources: () => import('./resources'),\n})\n","import {createContext} from 'react'\n\nimport type {PresentationNavigate, PresentationParams, StructureDocumentPaneParams} from './types'\n\nexport interface PresentationContextValue {\n  devMode: boolean\n  name: string\n  navigate: PresentationNavigate\n  params: PresentationParams\n  structureParams: StructureDocumentPaneParams\n}\n\nexport const PresentationContext = createContext<PresentationContextValue | null>(null)\n","import {useContext} from 'react'\n\nimport {PresentationContext, type PresentationContextValue} from './PresentationContext'\n\nexport function usePresentationTool(): PresentationContextValue {\n  const presentation = useContext(PresentationContext)\n\n  if (!presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","import {\n  ChevronRightIcon,\n  DesktopIcon,\n  ErrorOutlineIcon,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  createElement,\n  type ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from 'react'\nimport {type ObjectSchemaType, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME, DEFAULT_TOOL_TITLE} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationContext} from '../PresentationContext'\nimport type {DocumentLocation, DocumentLocationsState, PresentationPluginOptions} from '../types'\nimport {useCurrentPresentationToolName} from './useCurrentPresentationToolName'\n\nconst TONE_ICONS: Record<'positive' | 'caution' | 'critical', ComponentType> = {\n  positive: InfoOutlineIcon,\n  caution: WarningOutlineIcon,\n  critical: ErrorOutlineIcon,\n}\n\nexport function LocationsBanner(props: {\n  documentId: string\n  isResolving: boolean\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n  showPresentationTitle: boolean\n  state: DocumentLocationsState\n}): ReactNode {\n  const {documentId, isResolving, options, schemaType, showPresentationTitle} = props\n  const {locations, message, tone} = props.state\n  const len = locations?.length || 0\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const presentation = useContext(PresentationContext)\n  const [expanded, setExpanded] = useState(false)\n  const toggle = useCallback(() => {\n    if (!len) return\n    setExpanded((v) => !v)\n  }, [len])\n\n  const title = isResolving\n    ? t('locations-banner.resolving.text')\n    : message || t('locations-banner.locations-count', {count: len})\n\n  return (\n    <Card padding={1} radius={2} border tone={tone}>\n      <div style={{margin: -1}}>\n        {!locations && (\n          <Flex align=\"flex-start\" gap={3} padding={3}>\n            {tone && (\n              <Box flex=\"none\">\n                <Text size={1}>{createElement(TONE_ICONS[tone])}</Text>\n              </Box>\n            )}\n            <Box flex={1}>\n              <Text size={1} weight=\"medium\">\n                {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                {title}\n              </Text>\n            </Box>\n          </Flex>\n        )}\n        {locations && (\n          <>\n            <Card\n              as={len ? 'button' : undefined}\n              onClick={toggle}\n              padding={3}\n              radius={1}\n              tone=\"inherit\"\n            >\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  {isResolving ? (\n                    <Spinner size={1} />\n                  ) : (\n                    <Text size={1}>\n                      {len === 0 ? (\n                        <InfoOutlineIcon />\n                      ) : (\n                        <ChevronRightIcon\n                          style={{\n                            transform: `rotate(${expanded ? '90deg' : 0})`,\n                            transition: 'transform 100ms ease-in-out',\n                          }}\n                        />\n                      )}\n                    </Text>\n                  )}\n                </Box>\n                <Box flex={1}>\n                  <Text size={1} weight=\"medium\">\n                    {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                    {title}\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n            <Stack hidden={!expanded} marginTop={1} space={1}>\n              {locations.map((l, index) => (\n                <LocationItem\n                  active={\n                    (options.name || DEFAULT_TOOL_NAME) === presentation?.name &&\n                    l.href === presentation?.params.preview\n                  }\n                  documentId={documentId}\n                  documentType={schemaType.name}\n                  key={index}\n                  node={l}\n                  toolName={options.name || DEFAULT_TOOL_NAME}\n                />\n              ))}\n            </Stack>\n          </>\n        )}\n      </div>\n    </Card>\n  )\n}\n\nfunction LocationItem(props: {\n  active: boolean\n  documentId: string\n  documentType: string\n  node: DocumentLocation\n  toolName: string\n}) {\n  const {documentId, documentType, node, active, toolName} = props\n  const presentation = useContext(PresentationContext)\n  const currentPresentationToolName = useCurrentPresentationToolName()\n  const isCurrentTool = toolName === currentPresentationToolName\n  const navigate = presentation?.navigate\n\n  const presentationLinkProps = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: documentId,\n      type: documentType,\n      mode: 'presentation',\n      presentation: toolName,\n      ...presentation?.structureParams,\n      preview: node.href,\n    },\n  })\n\n  const handleCurrentToolClick = useCallback(() => {\n    navigate?.({}, {preview: node.href})\n  }, [node.href, navigate])\n\n  return (\n    <Card\n      {...(isCurrentTool ? {} : presentationLinkProps)}\n      as=\"a\"\n      key={node.href}\n      onClick={isCurrentTool ? handleCurrentToolClick : presentationLinkProps.onClick}\n      padding={3}\n      radius={1}\n      pressed={active}\n      tone=\"inherit\"\n    >\n      <Flex gap={3}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <DesktopIcon />\n          </Text>\n        </Box>\n        <Stack flex={1} space={2}>\n          <Text size={1} weight=\"medium\">\n            {node.title}\n          </Text>\n          <Text muted size={1} textOverflow=\"ellipsis\">\n            {node.href}\n          </Text>\n        </Stack>\n      </Flex>\n    </Card>\n  )\n}\n","import {usePresentationTool} from '../usePresentationTool'\n\nexport function useCurrentPresentationToolName(): string | undefined {\n  try {\n    return usePresentationTool().name\n  } catch {\n    return undefined\n  }\n}\n","import {createContext} from 'react'\n\nimport type {PresentationDocumentContextValue} from './types'\n\nexport const PresentationDocumentContext = createContext<PresentationDocumentContextValue | null>(\n  null,\n)\n","import {rem, Stack} from '@sanity/ui'\nimport {type ReactNode, useContext} from 'react'\nimport {type ObjectSchemaType} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type PublishedId} from '../internals'\nimport type {PresentationPluginOptions} from '../types'\nimport {useDocumentLocations} from '../useDocumentLocations'\nimport {LocationsBanner} from './LocationsBanner'\nimport {PresentationDocumentContext} from './PresentationDocumentContext'\n\nconst LocationStack = styled(Stack)`\n  min-height: ${rem(42)};\n\n  & + &:empty {\n    display: none;\n  }\n`\n\nexport function PresentationDocumentHeader(props: {\n  documentId: PublishedId\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n}): ReactNode {\n  const {documentId, options, schemaType} = props\n\n  const context = useContext(PresentationDocumentContext)\n  const {state, status} = useDocumentLocations({\n    id: documentId,\n    resolvers: options.resolve?.locations || options.locate,\n    type: schemaType.name,\n  })\n\n  if ((context && context.options[0] !== options) || status === 'empty') {\n    return null\n  }\n\n  const contextOptions = context?.options || []\n\n  return (\n    <LocationStack marginBottom={5} space={5}>\n      <Stack space={2}>\n        {contextOptions.map((options, idx) => (\n          <LocationsBanner\n            documentId={documentId}\n            isResolving={status === 'resolving'}\n            key={idx}\n            options={options}\n            schemaType={schemaType}\n            showPresentationTitle={contextOptions.length > 1}\n            state={state}\n          />\n        ))}\n      </Stack>\n    </LocationStack>\n  )\n}\n","import {\n  type ReactElement,\n  type ReactNode,\n  useCallback,\n  useContext,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport type {PresentationPluginOptions} from '../types'\nimport {PresentationDocumentContext} from './PresentationDocumentContext'\nimport type {PresentationDocumentContextValue} from './types'\n\n/** @internal */\nexport function PresentationDocumentProvider(props: {\n  children?: ReactNode\n  options: PresentationPluginOptions\n}): ReactElement {\n  const {children, options} = props\n  const parent = useContext(PresentationDocumentContext)\n  const parentRegister = parent?.register\n\n  const [optionsArray, setOptionsArray] = useState<PresentationPluginOptions[]>(() => [])\n\n  const register = useCallback(\n    (options: PresentationPluginOptions) => {\n      if (parentRegister) {\n        return parentRegister(options)\n      }\n\n      setOptionsArray((prev) => [options].concat(prev))\n\n      return () => {\n        setOptionsArray((prev) => prev.filter((o) => o !== options))\n      }\n    },\n    [parentRegister],\n  )\n\n  const registerRef = useRef(register)\n  registerRef.current = register\n\n  const context: PresentationDocumentContextValue = useMemo(\n    () => ({\n      options: parent?.options || optionsArray,\n      register,\n    }),\n    [optionsArray, parent, register],\n  )\n\n  useLayoutEffect(() => registerRef.current(options), [options])\n\n  return (\n    <PresentationDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDocumentContext.Provider>\n  )\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {useContext, useMemo} from 'react'\nimport {type Tool} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  defineDocumentFieldAction,\n  type DocumentFieldActionItem,\n  isRecord,\n  pathToString,\n  useWorkspace,\n} from '../internals'\nimport {PresentationContext} from '../PresentationContext'\n\nexport const openInStructure = defineDocumentFieldAction({\n  name: 'presentation/openInStructure',\n  useAction({documentId, documentType, path}) {\n    const workspace = useWorkspace()\n    const {navigateIntent} = useRouter()\n    const presentation = useContext(PresentationContext)\n\n    const defaultStructureTool = useMemo(\n      () => findStructureTool(workspace.tools, documentId, documentType),\n      [documentId, documentType, workspace.tools],\n    )\n\n    return {\n      type: 'action',\n      hidden: !presentation || path.length > 0 || !defaultStructureTool,\n      icon: defaultStructureTool?.icon || MasterDetailIcon,\n      title: `Open in ${defaultStructureTool?.title || 'Structure'}`,\n      onAction() {\n        navigateIntent('edit', {\n          id: documentId,\n          type: documentType,\n          mode: 'structure',\n          path: pathToString(path),\n        })\n      },\n      renderAsButton: true,\n    } satisfies DocumentFieldActionItem\n  },\n})\n\nfunction findStructureTool(\n  tools: Tool[],\n  documentId: string,\n  documentType: string,\n): Tool | undefined {\n  const results = tools.map((t) => {\n    const match = t.canHandleIntent?.(\n      'edit',\n      {\n        id: documentId,\n        type: documentType,\n        mode: 'structure',\n      },\n      {},\n    )\n\n    return {tool: t, match}\n  })\n\n  const modeMatches = results.filter((t) => isRecord(t.match) && t.match['mode'])\n\n  if (modeMatches.length > 0) {\n    return modeMatches[0].tool\n  }\n\n  const matches = results.filter((t) => t.match)\n\n  return matches[0]?.tool\n}\n","import {uuid} from '@sanity/uuid'\nimport {type SearchParam} from 'sanity/router'\n\nimport {encodeJsonParams, getPublishedId} from './internals'\nimport type {PresentationStateParams} from './types'\n\n/**\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  _routerState: undefined,\n  payload: unknown,\n):\n  | (PresentationStateParams & {_searchParams: SearchParam[]})\n  | {intent: string; params: Record<string, string>; payload: unknown} {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {id, mode, path, presentation, type, ...searchParams} = params\n\n  if (intent === 'edit' && id) {\n    return {\n      type: type || '*',\n      id: getPublishedId(id),\n      path,\n      _searchParams: Object.entries(searchParams),\n    }\n  }\n\n  if (intent === 'create') {\n    searchParams['preview'] =\n      searchParams['preview'] || new URLSearchParams(window.location.search).get('preview') || '/'\n\n    if (payload && typeof payload === 'object') {\n      searchParams['templateParams'] = encodeJsonParams(payload as Record<string, unknown>)\n    }\n\n    return {\n      type: type || '*',\n      id: id || uuid(),\n      _searchParams: Object.entries(searchParams),\n    }\n  }\n  return {intent, params, payload}\n}\n","import {route} from 'sanity/router'\n\nexport const router = route.create('/', {__unsafe_disableScopedSearchParams: true}, [\n  route.intents('/intent'),\n  route.create(':type', [route.create(':id', [route.create(':path')])]),\n])\n","import type {SanityDocument} from '@sanity/client'\nimport {lazy, Suspense} from 'react'\nimport {definePlugin, type InputProps, isDocumentSchemaType} from 'sanity'\n\nimport {DEFAULT_TOOL_ICON, DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport {PresentationDocumentHeader} from './document/PresentationDocumentHeader'\nimport {PresentationDocumentProvider} from './document/PresentationDocumentProvider'\nimport {openInStructure} from './fieldActions/openInStructure'\nimport {getIntentState} from './getIntentState'\nimport {presentationUsEnglishLocaleBundle} from './i18n'\nimport {getPublishedId} from './internals'\nimport {router} from './router'\nimport type {\n  DocumentLocationResolverObject,\n  DocumentLocationsState,\n  DocumentResolver,\n  PresentationPluginOptions,\n} from './types'\n\nconst PresentationTool = lazy(() => import('./PresentationTool'))\nconst BroadcastDisplayedDocument = lazy(() => import('./loader/BroadcastDisplayedDocument'))\n\n/**\n * Define locations for a given document type.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolver - resolver that return locations for a document.\n * @public\n */\nexport function defineLocations<K extends string>(\n  resolver: DocumentLocationResolverObject<K> | DocumentLocationsState,\n): typeof resolver {\n  return resolver\n}\n\n/**\n * Define documents for a given location.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolvers - resolvers that return documents.\n * @public\n */\nexport function defineDocuments(resolvers: DocumentResolver[]): typeof resolvers {\n  return resolvers\n}\n\nexport const presentationTool = definePlugin<PresentationPluginOptions>((options) => {\n  const toolName = options.name || DEFAULT_TOOL_NAME\n\n  if ('locate' in options) {\n    // eslint-disable-next-line no-console\n    console.warn('Presentation’s `locate` option is deprecated. Use `resolve.locations` instead.')\n  }\n\n  const hasLocationsResolver = !!(options.resolve?.locations || options.locate)\n\n  function PresentationDocumentInput(props: InputProps) {\n    const value = props.value as SanityDocument\n    const documentId = value?._id ? getPublishedId(value?._id) : undefined\n\n    if (isDocumentSchemaType(props.schemaType)) {\n      return (\n        <PresentationDocumentProvider options={options}>\n          {hasLocationsResolver && documentId && (\n            <PresentationDocumentHeader\n              documentId={documentId}\n              options={options}\n              schemaType={props.schemaType}\n            />\n          )}\n          {props.renderDefault(props)}\n          <Suspense key=\"broadcast-displayed-document\">\n            <BroadcastDisplayedDocument key={documentId} value={value} />\n          </Suspense>\n        </PresentationDocumentProvider>\n      )\n    }\n\n    return props.renderDefault(props)\n  }\n\n  function canHandleCreateIntent(params: Record<string, unknown>) {\n    // We can't handle create intents without a `type` parameter\n    if (!('type' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params['presentation'] !== toolName) {\n      return false\n    }\n\n    return 'template' in params ? {template: true} : true\n  }\n\n  function canHandleEditIntent(params: Record<string, unknown>) {\n    // We can't handle edit intents without `type` or `id` parameters\n    if (!('type' in params) || !('id' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params['presentation'] !== toolName) {\n      return false\n    }\n\n    return 'mode' in params ? {mode: params['mode'] === EDIT_INTENT_MODE} : true\n  }\n\n  return {\n    i18n: {\n      bundles: [presentationUsEnglishLocaleBundle],\n    },\n    document: {\n      unstable_fieldActions: (prev) => {\n        return [\n          ...prev.filter((a) => a.name !== openInStructure.name), // prevent duplication\n          openInStructure,\n        ]\n      },\n    },\n\n    form: {\n      components: {\n        input: PresentationDocumentInput,\n      },\n    },\n\n    tools: [\n      {\n        icon: options.icon || DEFAULT_TOOL_ICON,\n        name: toolName,\n        title: options.title,\n        component: PresentationTool,\n        options,\n        canHandleIntent(intent, params) {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        router,\n      },\n    ],\n  }\n})\n","import {createContext} from 'react'\n\nexport type PresentationNavigateContextValue = (\n  preview: string | undefined,\n  document?: {type: string; id: string},\n) => void\n\nexport const PresentationNavigateContext = createContext<PresentationNavigateContextValue | null>(\n  null,\n)\n","import {useContext} from 'react'\n\nimport {\n  PresentationNavigateContext,\n  type PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\n\nexport function usePresentationNavigate(): PresentationNavigateContextValue {\n  const navigate = useContext(PresentationNavigateContext)\n\n  if (!navigate) {\n    throw new Error('Presentation navigate context is missing')\n  }\n\n  return navigate\n}\n\nexport type {PresentationNavigateContextValue}\n","import {createContext} from 'react'\n\nimport type {PresentationParams} from './types'\n\nexport const PresentationParamsContext = createContext<PresentationParams | null>(null)\n","import {useContext} from 'react'\n\nimport {PresentationParamsContext} from './PresentationParamsContext'\nimport type {PresentationParams} from './types'\n\n/** @public */\nexport function usePresentationParams(throwOnMissingContext?: true): PresentationParams\n/** @public */\nexport function usePresentationParams(throwOnMissingContext: false): PresentationParams | null\n/** @public */\nexport function usePresentationParams(throwOnMissingContext = true): PresentationParams | null {\n  const params = useContext(PresentationParamsContext)\n\n  if (throwOnMissingContext && !params) {\n    throw new Error('Presentation params context is missing')\n  }\n\n  return params\n}\n"],"names":["DEFAULT_TOOL_ICON","ComposeIcon","DEFAULT_TOOL_NAME","DEFAULT_TOOL_TITLE","COMMENTS_INSPECTOR_NAME","EDIT_INTENT_MODE","MAX_TIME_TO_OVERLAYS_CONNECTION","API_VERSION","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","LIVE_QUERY_CACHE_BATCH_SIZE","LIVE_QUERY_CACHE_SIZE","INITIAL_STATE","locations","presentationLocaleNamespace","presentationUsEnglishLocaleBundle","defineLocaleResourceBundle","locale","namespace","resources","import","PresentationContext","createContext","usePresentationTool","presentation","useContext","Error","TONE_ICONS","positive","InfoOutlineIcon","caution","WarningOutlineIcon","critical","ErrorOutlineIcon","LocationsBanner","props","documentId","isResolving","options","schemaType","showPresentationTitle","message","tone","state","len","length","t","useTranslation","expanded","setExpanded","useState","toggle","useCallback","v","title","count","Card","padding","radius","border","children","style","margin","Flex","align","gap","Box","flex","Text","size","createElement","jsx","jsxs","weight","Fragment","as","onClick","Spinner","ChevronRightIcon","transform","transition","Stack","hidden","marginTop","space","map","l","index","LocationItem","active","name","href","params","preview","documentType","node","toolName","isCurrentTool","useCurrentPresentationToolName","navigate","presentationLinkProps","useIntentLink","intent","id","type","mode","structureParams","handleCurrentToolClick","key","pressed","DesktopIcon","muted","textOverflow","PresentationDocumentContext","LocationStack","styled","rem","PresentationDocumentHeader","_a","context","status","resolvers","documentStore","useDocumentStore","locationsState","setLocationsState","resolver","locationsStatus","setLocationsStatus","result","useMemo","_result","isObservable","of","query","Object","entries","select","value","join","listenQuery","perspective","pipe","resolve","useEffect","sub","subscribe","unsubscribe","useDocumentLocations","locate","contextOptions","marginBottom","idx","PresentationDocumentProvider","parent","parentRegister","register","optionsArray","setOptionsArray","prev","concat","filter","o","registerRef","useRef","current","useLayoutEffect","Provider","openInStructure","defineDocumentFieldAction","useAction","path","workspace","useWorkspace","navigateIntent","useRouter","defaultStructureTool","tools","results","tool","match","canHandleIntent","call","modeMatches","isRecord","findStructureTool","icon","MasterDetailIcon","onAction","pathToString","renderAsButton","getIntentState","_routerState","payload","searchParams","getPublishedId","_searchParams","URLSearchParams","window","location","search","get","templateParams","encodeJsonParams","uuid","router","route","create","__unsafe_disableScopedSearchParams","intents","PresentationTool","lazy","BroadcastDisplayedDocument","defineLocations","defineDocuments","presentationTool","definePlugin","console","warn","hasLocationsResolver","i18n","bundles","document","unstable_fieldActions","a","form","components","input","_id","isDocumentSchemaType","renderDefault","Suspense","component","template","canHandleCreateIntent","canHandleEditIntent","PresentationNavigateContext","usePresentationNavigate","PresentationParamsContext","usePresentationParams","throwOnMissingContext"],"mappings":"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"}