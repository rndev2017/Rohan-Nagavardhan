{"version":3,"file":"DisplayedDocumentBroadcaster.js","sources":["../../src/loader/DisplayedDocumentBroadcaster.tsx"],"sourcesContent":["/**\n * Report back up the document state being displayed in the document pane,\n * allowing Presentation Tool to patch the live queries with the same state.\n * This makes the Perspective switcher less confusing, as it applies to everything else on the page.\n * It's also why it's possible to select an older revision and see it in the preview,\n * effectively letting you preview a revert action you might be considering to perform.\n */\n\nimport isEqual from 'fast-deep-equal'\nimport {createContext, type PropsWithChildren, useCallback, useContext, useEffect} from 'react'\nimport {type SanityDocument} from 'sanity'\n\n/** @internal */\nexport type SetDisplayedDocument = (displayed: Partial<SanityDocument> | null | undefined) => void\n\nconst Context = createContext<SetDisplayedDocument | null>(null)\n\nexport interface DisplayedDocumentBroadcasterProps extends PropsWithChildren {\n  setDisplayedDocument: React.Dispatch<\n    React.SetStateAction<Partial<SanityDocument> | null | undefined>\n  >\n  documentId: string | null | undefined\n}\n\nexport function DisplayedDocumentBroadcasterProvider(\n  props: DisplayedDocumentBroadcasterProps,\n): JSX.Element {\n  const {children, setDisplayedDocument, documentId} = props\n\n  const context = useCallback<SetDisplayedDocument>(\n    (next) => setDisplayedDocument((prev) => (isEqual(prev, next) ? prev : next)),\n    [setDisplayedDocument],\n  )\n\n  useEffect(() => {\n    // If no document is currently being displayed then reset the state\n    if (documentId) {\n      return\n    }\n    const timeout = setTimeout(() => setDisplayedDocument(null))\n    return () => clearTimeout(timeout)\n  }, [documentId, setDisplayedDocument])\n\n  return <Context.Provider value={context}>{children}</Context.Provider>\n}\n\nexport function useDisplayedDocumentBroadcaster(): SetDisplayedDocument | null {\n  return useContext(Context)\n}\n"],"names":["jsx","isEqual","createContext","useContext","useCallback","useEffect","Context","DisplayedDocumentBroadcasterProvider","props","children","setDisplayedDocument","documentId","context","next","prev","timeout","setTimeout","clearTimeout","Provider","value","useDisplayedDocumentBroadcaster"],"mappings":"cAeAA,MAAA,2BAAAC,MAAA,0CAAAC,gBAAAC,iBAAAC,eAAAC,MAAA,QAAA,MAAMC,EAAUJ,EAA2C,MASpD,SAASK,EACdC,GAEA,MAAMC,SAACA,EAAUC,qBAAAA,EAAAC,WAAsBA,GAAcH,EAE/CI,EAAUR,GACbS,GAASH,GAAsBI,GAAUb,EAAQa,EAAMD,GAAQC,EAAOD,KACvE,CAACH,IAGH,OAAAL,GAAU,KAEJ,GAAAM,EACF,OAEF,MAAMI,EAAUC,YAAW,IAAMN,EAAqB,QAC/C,MAAA,IAAMO,aAAaF,EAAO,GAChC,CAACJ,EAAYD,IAERV,EAAAM,EAAQY,SAAR,CAAiBC,MAAOP,EAAUH,YAC5C,CAEO,SAASW,IACd,OAAOjB,EAAWG,EACpB"}