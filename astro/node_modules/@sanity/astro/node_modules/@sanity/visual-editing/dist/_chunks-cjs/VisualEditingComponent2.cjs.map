{"version":3,"file":"VisualEditingComponent2.cjs","sources":["../../src/remix/VisualEditingComponent.tsx"],"sourcesContent":["import {useLocation, useNavigate, useRevalidator} from '@remix-run/react'\nimport {useEffect, useRef, useState} from 'react'\n\nimport {type HistoryAdapterNavigate, type HistoryRefresh, type VisualEditingOptions} from '../types'\nimport {enableVisualEditing} from '../ui/enableVisualEditing'\n\n/**\n * @public\n */\nexport interface VisualEditingProps extends Omit<VisualEditingOptions, 'history' | 'refresh'> {\n  /**\n   * @deprecated The histoy adapter is already implemented\n   */\n  history?: never\n  /**\n   * The refresh API allows smarter refresh logic than the default `location.reload()` behavior.\n   * You can call the refreshDefault argument to trigger the default refresh behavior so you don't have to reimplement it.\n   */\n  refresh?: (\n    payload: HistoryRefresh,\n    refreshDefault: () => false | Promise<void>,\n  ) => false | Promise<void>\n}\n\nexport default function VisualEditingComponent(props: VisualEditingProps): null {\n  const {refresh, zIndex} = props\n\n  const navigateRemix = useNavigate()\n  const navigateRemixRef = useRef(navigateRemix)\n  const [navigate, setNavigate] = useState<HistoryAdapterNavigate | undefined>()\n  const revalidator = useRevalidator()\n  const [revalidatorPromise, setRevalidatorPromise] = useState<(() => void) | null>(null)\n  const [revalidatorLoading, setRevalidatorLoading] = useState(false)\n\n  useEffect(() => {\n    navigateRemixRef.current = navigateRemix\n  }, [navigateRemix])\n  useEffect(() => {\n    if (revalidatorPromise && revalidator.state === 'loading') {\n      setRevalidatorLoading(true)\n    } else if (revalidatorPromise && revalidatorLoading && revalidator.state === 'idle') {\n      revalidatorPromise()\n      setRevalidatorPromise(null)\n      setRevalidatorLoading(false)\n    }\n  }, [revalidatorLoading, revalidator.state, revalidatorPromise])\n  useEffect(() => {\n    const disable = enableVisualEditing({\n      zIndex,\n      refresh: (payload) => {\n        function refreshDefault() {\n          if (payload.source === 'mutation' && payload.livePreviewEnabled) {\n            return false\n          }\n          return new Promise<void>((resolve) => {\n            revalidator.revalidate()\n            setRevalidatorPromise(() => resolve)\n          })\n        }\n        return refresh ? refresh(payload, refreshDefault) : refreshDefault()\n      },\n      history: {\n        subscribe: (_navigate) => {\n          setNavigate(() => _navigate)\n          return () => setNavigate(undefined)\n        },\n        update: (update) => {\n          if (update.type === 'push' || update.type === 'replace') {\n            navigateRemixRef.current(update.url, {\n              replace: update.type === 'replace',\n            })\n          } else if (update.type === 'pop') {\n            navigateRemixRef.current(-1)\n          }\n        },\n      },\n    })\n    return () => disable()\n  }, [refresh, revalidator, zIndex])\n\n  const location = useLocation()\n  useEffect(() => {\n    if (navigate) {\n      navigate({\n        type: 'push',\n        url: `${location.pathname}${location.search}${location.hash}`,\n      })\n    }\n  }, [location.hash, location.pathname, location.search, navigate])\n\n  return null\n}\n"],"names":["exports","default","props","refresh","zIndex","navigateRemix","useNavigate","navigateRemixRef","useRef","navigate","setNavigate","useState","revalidator","useRevalidator","revalidatorPromise","setRevalidatorPromise","revalidatorLoading","setRevalidatorLoading","useEffect","current","state","disable","enableVisualEditing","payload","refreshDefault","source","livePreviewEnabled","Promise","resolve","revalidate","history","subscribe","_navigate","update","type","url","replace","location","useLocation","pathname","search","hash"],"mappings":"yGA2FAA,QAAAC,QAnEA,SAA+CC,GAC7C,MAAMC,QAACA,EAASC,OAAAA,GAAUF,EAEpBG,EAAgBC,EAAAA,cAChBC,EAAmBC,EAAOA,OAAAH,IACzBI,EAAUC,GAAeC,EAAAA,WAC1BC,EAAcC,EAAAA,kBACbC,EAAoBC,GAAyBJ,EAA8BA,SAAA,OAC3EK,EAAoBC,GAAyBN,EAAAA,UAAS,GAE7DO,EAAAA,WAAU,KACRX,EAAiBY,QAAUd,CAAA,GAC1B,CAACA,IACJa,EAAAA,WAAU,KACJJ,GAA4C,YAAtBF,EAAYQ,MACpCH,GAAsB,GACbH,GAAsBE,GAA4C,SAAtBJ,EAAYQ,QACjEN,IACAC,EAAsB,MACtBE,GAAsB,GAAK,GAE5B,CAACD,EAAoBJ,EAAYQ,MAAON,IAC3CI,EAAAA,WAAU,KACF,MAAAG,EAAUC,EAAAA,EAAoB,CAClClB,SACAD,QAAUoB,IACR,SAASC,IACH,OAAmB,aAAnBD,EAAQE,SAAyBF,EAAQG,qBAGtC,IAAIC,SAAeC,IACxBhB,EAAYiB,aACZd,GAAsB,IAAMa,GAAO,GAEvC,CACA,OAAOzB,EAAUA,EAAQoB,EAASC,GAAkBA,GAAe,EAErEM,QAAS,CACPC,UAAYC,IACVtB,GAAY,IAAMsB,IACX,IAAMtB,OAAY,IAE3BuB,OAASA,IACa,SAATA,EAAAC,MAAmC,YAAhBD,EAAOC,KACnC3B,EAAiBY,QAAQc,EAAOE,IAAK,CACnCC,QAAyB,YAAhBH,EAAOC,OAEO,QAAhBD,EAAOC,MAChB3B,EAAiBY,SAAU,EAAA,KAKnC,MAAO,IAAME,GAAQ,GACpB,CAAClB,EAASS,EAAaR,IAEpB,MAAAiC,EAAWC,EAAAA,cACjBpB,OAAAA,EAAAA,WAAU,KACJT,GACFA,EAAS,CACPyB,KAAM,OACNC,IAAK,GAAGE,EAASE,WAAWF,EAASG,SAASH,EAASI,QACxD,GAEF,CAACJ,EAASI,KAAMJ,EAASE,SAAUF,EAASG,OAAQ/B,IAEhD,IACT"}