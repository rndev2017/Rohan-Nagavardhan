var fr = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Tr(f) {
  return f && f.__esModule && Object.prototype.hasOwnProperty.call(f, "default") ? f.default : f;
}
var K = { exports: {} }, j = { exports: {} }, pr = {}, J = {};
J.byteLength = Mr;
J.toByteArray = Dr;
J.fromByteArray = Or;
var N = [], b = [], Rr = typeof Uint8Array < "u" ? Uint8Array : Array, $ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for (var V = 0, br = $.length; V < br; ++V)
  N[V] = $[V], b[$.charCodeAt(V)] = V;
b["-".charCodeAt(0)] = 62;
b["_".charCodeAt(0)] = 63;
function cr(f) {
  var h = f.length;
  if (h % 4 > 0)
    throw new Error("Invalid string. Length must be a multiple of 4");
  var s = f.indexOf("=");
  s === -1 && (s = h);
  var c = s === h ? 0 : 4 - s % 4;
  return [s, c];
}
function Mr(f) {
  var h = cr(f), s = h[0], c = h[1];
  return (s + c) * 3 / 4 - c;
}
function Lr(f, h, s) {
  return (h + s) * 3 / 4 - s;
}
function Dr(f) {
  var h, s = cr(f), c = s[0], y = s[1], l = new Rr(Lr(f, c, y)), p = 0, o = y > 0 ? c - 4 : c, w;
  for (w = 0; w < o; w += 4)
    h = b[f.charCodeAt(w)] << 18 | b[f.charCodeAt(w + 1)] << 12 | b[f.charCodeAt(w + 2)] << 6 | b[f.charCodeAt(w + 3)], l[p++] = h >> 16 & 255, l[p++] = h >> 8 & 255, l[p++] = h & 255;
  return y === 2 && (h = b[f.charCodeAt(w)] << 2 | b[f.charCodeAt(w + 1)] >> 4, l[p++] = h & 255), y === 1 && (h = b[f.charCodeAt(w)] << 10 | b[f.charCodeAt(w + 1)] << 4 | b[f.charCodeAt(w + 2)] >> 2, l[p++] = h >> 8 & 255, l[p++] = h & 255), l;
}
function Nr(f) {
  return N[f >> 18 & 63] + N[f >> 12 & 63] + N[f >> 6 & 63] + N[f & 63];
}
function kr(f, h, s) {
  for (var c, y = [], l = h; l < s; l += 3)
    c = (f[l] << 16 & 16711680) + (f[l + 1] << 8 & 65280) + (f[l + 2] & 255), y.push(Nr(c));
  return y.join("");
}
function Or(f) {
  for (var h, s = f.length, c = s % 3, y = [], l = 16383, p = 0, o = s - c; p < o; p += l)
    y.push(kr(f, p, p + l > o ? o : p + l));
  return c === 1 ? (h = f[s - 1], y.push(
    N[h >> 2] + N[h << 4 & 63] + "=="
  )) : c === 2 && (h = (f[s - 2] << 8) + f[s - 1], y.push(
    N[h >> 10] + N[h >> 4 & 63] + N[h << 2 & 63] + "="
  )), y.join("");
}
var z = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
z.read = function(f, h, s, c, y) {
  var l, p, o = y * 8 - c - 1, w = (1 << o) - 1, U = w >> 1, A = -7, d = s ? y - 1 : 0, R = s ? -1 : 1, _ = f[h + d];
  for (d += R, l = _ & (1 << -A) - 1, _ >>= -A, A += o; A > 0; l = l * 256 + f[h + d], d += R, A -= 8)
    ;
  for (p = l & (1 << -A) - 1, l >>= -A, A += c; A > 0; p = p * 256 + f[h + d], d += R, A -= 8)
    ;
  if (l === 0)
    l = 1 - U;
  else {
    if (l === w)
      return p ? NaN : (_ ? -1 : 1) * (1 / 0);
    p = p + Math.pow(2, c), l = l - U;
  }
  return (_ ? -1 : 1) * p * Math.pow(2, l - c);
};
z.write = function(f, h, s, c, y, l) {
  var p, o, w, U = l * 8 - y - 1, A = (1 << U) - 1, d = A >> 1, R = y === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, _ = c ? 0 : l - 1, O = c ? 1 : -1, C = h < 0 || h === 0 && 1 / h < 0 ? 1 : 0;
  for (h = Math.abs(h), isNaN(h) || h === 1 / 0 ? (o = isNaN(h) ? 1 : 0, p = A) : (p = Math.floor(Math.log(h) / Math.LN2), h * (w = Math.pow(2, -p)) < 1 && (p--, w *= 2), p + d >= 1 ? h += R / w : h += R * Math.pow(2, 1 - d), h * w >= 2 && (p++, w /= 2), p + d >= A ? (o = 0, p = A) : p + d >= 1 ? (o = (h * w - 1) * Math.pow(2, y), p = p + d) : (o = h * Math.pow(2, d - 1) * Math.pow(2, y), p = 0)); y >= 8; f[s + _] = o & 255, _ += O, o /= 256, y -= 8)
    ;
  for (p = p << y | o, U += y; U > 0; f[s + _] = p & 255, _ += O, p /= 256, U -= 8)
    ;
  f[s + _ - O] |= C * 128;
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(f) {
  var h = J, s = z, c = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  f.Buffer = o, f.SlowBuffer = x, f.INSPECT_MAX_BYTES = 50;
  var y = 2147483647;
  f.kMaxLength = y, o.TYPED_ARRAY_SUPPORT = l(), !o.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function l() {
    try {
      var n = new Uint8Array(1), r = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(r, Uint8Array.prototype), Object.setPrototypeOf(n, r), n.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(o.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (o.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(o.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (o.isBuffer(this))
        return this.byteOffset;
    }
  });
  function p(n) {
    if (n > y)
      throw new RangeError('The value "' + n + '" is invalid for option "size"');
    var r = new Uint8Array(n);
    return Object.setPrototypeOf(r, o.prototype), r;
  }
  function o(n, r, t) {
    if (typeof n == "number") {
      if (typeof r == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return d(n);
    }
    return w(n, r, t);
  }
  o.poolSize = 8192;
  function w(n, r, t) {
    if (typeof n == "string")
      return R(n, r);
    if (ArrayBuffer.isView(n))
      return O(n);
    if (n == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof n
      );
    if (D(n, ArrayBuffer) || n && D(n.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (D(n, SharedArrayBuffer) || n && D(n.buffer, SharedArrayBuffer)))
      return C(n, r, t);
    if (typeof n == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    var e = n.valueOf && n.valueOf();
    if (e != null && e !== n)
      return o.from(e, r, t);
    var i = k(n);
    if (i)
      return i;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof n[Symbol.toPrimitive] == "function")
      return o.from(
        n[Symbol.toPrimitive]("string"),
        r,
        t
      );
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof n
    );
  }
  o.from = function(n, r, t) {
    return w(n, r, t);
  }, Object.setPrototypeOf(o.prototype, Uint8Array.prototype), Object.setPrototypeOf(o, Uint8Array);
  function U(n) {
    if (typeof n != "number")
      throw new TypeError('"size" argument must be of type number');
    if (n < 0)
      throw new RangeError('The value "' + n + '" is invalid for option "size"');
  }
  function A(n, r, t) {
    return U(n), n <= 0 ? p(n) : r !== void 0 ? typeof t == "string" ? p(n).fill(r, t) : p(n).fill(r) : p(n);
  }
  o.alloc = function(n, r, t) {
    return A(n, r, t);
  };
  function d(n) {
    return U(n), p(n < 0 ? 0 : v(n) | 0);
  }
  o.allocUnsafe = function(n) {
    return d(n);
  }, o.allocUnsafeSlow = function(n) {
    return d(n);
  };
  function R(n, r) {
    if ((typeof r != "string" || r === "") && (r = "utf8"), !o.isEncoding(r))
      throw new TypeError("Unknown encoding: " + r);
    var t = g(n, r) | 0, e = p(t), i = e.write(n, r);
    return i !== t && (e = e.slice(0, i)), e;
  }
  function _(n) {
    for (var r = n.length < 0 ? 0 : v(n.length) | 0, t = p(r), e = 0; e < r; e += 1)
      t[e] = n[e] & 255;
    return t;
  }
  function O(n) {
    if (D(n, Uint8Array)) {
      var r = new Uint8Array(n);
      return C(r.buffer, r.byteOffset, r.byteLength);
    }
    return _(n);
  }
  function C(n, r, t) {
    if (r < 0 || n.byteLength < r)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (n.byteLength < r + (t || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    var e;
    return r === void 0 && t === void 0 ? e = new Uint8Array(n) : t === void 0 ? e = new Uint8Array(n, r) : e = new Uint8Array(n, r, t), Object.setPrototypeOf(e, o.prototype), e;
  }
  function k(n) {
    if (o.isBuffer(n)) {
      var r = v(n.length) | 0, t = p(r);
      return t.length === 0 || n.copy(t, 0, 0, r), t;
    }
    if (n.length !== void 0)
      return typeof n.length != "number" || Y(n.length) ? p(0) : _(n);
    if (n.type === "Buffer" && Array.isArray(n.data))
      return _(n.data);
  }
  function v(n) {
    if (n >= y)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + y.toString(16) + " bytes");
    return n | 0;
  }
  function x(n) {
    return +n != n && (n = 0), o.alloc(+n);
  }
  o.isBuffer = function(r) {
    return r != null && r._isBuffer === !0 && r !== o.prototype;
  }, o.compare = function(r, t) {
    if (D(r, Uint8Array) && (r = o.from(r, r.offset, r.byteLength)), D(t, Uint8Array) && (t = o.from(t, t.offset, t.byteLength)), !o.isBuffer(r) || !o.isBuffer(t))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (r === t)
      return 0;
    for (var e = r.length, i = t.length, u = 0, a = Math.min(e, i); u < a; ++u)
      if (r[u] !== t[u]) {
        e = r[u], i = t[u];
        break;
      }
    return e < i ? -1 : i < e ? 1 : 0;
  }, o.isEncoding = function(r) {
    switch (String(r).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, o.concat = function(r, t) {
    if (!Array.isArray(r))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (r.length === 0)
      return o.alloc(0);
    var e;
    if (t === void 0)
      for (t = 0, e = 0; e < r.length; ++e)
        t += r[e].length;
    var i = o.allocUnsafe(t), u = 0;
    for (e = 0; e < r.length; ++e) {
      var a = r[e];
      if (D(a, Uint8Array))
        u + a.length > i.length ? o.from(a).copy(i, u) : Uint8Array.prototype.set.call(
          i,
          a,
          u
        );
      else if (o.isBuffer(a))
        a.copy(i, u);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      u += a.length;
    }
    return i;
  };
  function g(n, r) {
    if (o.isBuffer(n))
      return n.length;
    if (ArrayBuffer.isView(n) || D(n, ArrayBuffer))
      return n.byteLength;
    if (typeof n != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof n
      );
    var t = n.length, e = arguments.length > 2 && arguments[2] === !0;
    if (!e && t === 0)
      return 0;
    for (var i = !1; ; )
      switch (r) {
        case "ascii":
        case "latin1":
        case "binary":
          return t;
        case "utf8":
        case "utf-8":
          return W(n).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return t * 2;
        case "hex":
          return t >>> 1;
        case "base64":
          return or(n).length;
        default:
          if (i)
            return e ? -1 : W(n).length;
          r = ("" + r).toLowerCase(), i = !0;
      }
  }
  o.byteLength = g;
  function P(n, r, t) {
    var e = !1;
    if ((r === void 0 || r < 0) && (r = 0), r > this.length || ((t === void 0 || t > this.length) && (t = this.length), t <= 0) || (t >>>= 0, r >>>= 0, t <= r))
      return "";
    for (n || (n = "utf8"); ; )
      switch (n) {
        case "hex":
          return Ar(this, r, t);
        case "utf8":
        case "utf-8":
          return rr(this, r, t);
        case "ascii":
          return vr(this, r, t);
        case "latin1":
        case "binary":
          return Br(this, r, t);
        case "base64":
          return gr(this, r, t);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return dr(this, r, t);
        default:
          if (e)
            throw new TypeError("Unknown encoding: " + n);
          n = (n + "").toLowerCase(), e = !0;
      }
  }
  o.prototype._isBuffer = !0;
  function M(n, r, t) {
    var e = n[r];
    n[r] = n[t], n[t] = e;
  }
  o.prototype.swap16 = function() {
    var r = this.length;
    if (r % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (var t = 0; t < r; t += 2)
      M(this, t, t + 1);
    return this;
  }, o.prototype.swap32 = function() {
    var r = this.length;
    if (r % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (var t = 0; t < r; t += 4)
      M(this, t, t + 3), M(this, t + 1, t + 2);
    return this;
  }, o.prototype.swap64 = function() {
    var r = this.length;
    if (r % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (var t = 0; t < r; t += 8)
      M(this, t, t + 7), M(this, t + 1, t + 6), M(this, t + 2, t + 5), M(this, t + 3, t + 4);
    return this;
  }, o.prototype.toString = function() {
    var r = this.length;
    return r === 0 ? "" : arguments.length === 0 ? rr(this, 0, r) : P.apply(this, arguments);
  }, o.prototype.toLocaleString = o.prototype.toString, o.prototype.equals = function(r) {
    if (!o.isBuffer(r))
      throw new TypeError("Argument must be a Buffer");
    return this === r ? !0 : o.compare(this, r) === 0;
  }, o.prototype.inspect = function() {
    var r = "", t = f.INSPECT_MAX_BYTES;
    return r = this.toString("hex", 0, t).replace(/(.{2})/g, "$1 ").trim(), this.length > t && (r += " ... "), "<Buffer " + r + ">";
  }, c && (o.prototype[c] = o.prototype.inspect), o.prototype.compare = function(r, t, e, i, u) {
    if (D(r, Uint8Array) && (r = o.from(r, r.offset, r.byteLength)), !o.isBuffer(r))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof r
      );
    if (t === void 0 && (t = 0), e === void 0 && (e = r ? r.length : 0), i === void 0 && (i = 0), u === void 0 && (u = this.length), t < 0 || e > r.length || i < 0 || u > this.length)
      throw new RangeError("out of range index");
    if (i >= u && t >= e)
      return 0;
    if (i >= u)
      return -1;
    if (t >= e)
      return 1;
    if (t >>>= 0, e >>>= 0, i >>>= 0, u >>>= 0, this === r)
      return 0;
    for (var a = u - i, E = e - t, m = Math.min(a, E), F = this.slice(i, u), S = r.slice(t, e), B = 0; B < m; ++B)
      if (F[B] !== S[B]) {
        a = F[B], E = S[B];
        break;
      }
    return a < E ? -1 : E < a ? 1 : 0;
  };
  function Z(n, r, t, e, i) {
    if (n.length === 0)
      return -1;
    if (typeof t == "string" ? (e = t, t = 0) : t > 2147483647 ? t = 2147483647 : t < -2147483648 && (t = -2147483648), t = +t, Y(t) && (t = i ? 0 : n.length - 1), t < 0 && (t = n.length + t), t >= n.length) {
      if (i)
        return -1;
      t = n.length - 1;
    } else if (t < 0)
      if (i)
        t = 0;
      else
        return -1;
    if (typeof r == "string" && (r = o.from(r, e)), o.isBuffer(r))
      return r.length === 0 ? -1 : Q(n, r, t, e, i);
    if (typeof r == "number")
      return r = r & 255, typeof Uint8Array.prototype.indexOf == "function" ? i ? Uint8Array.prototype.indexOf.call(n, r, t) : Uint8Array.prototype.lastIndexOf.call(n, r, t) : Q(n, [r], t, e, i);
    throw new TypeError("val must be string, number or Buffer");
  }
  function Q(n, r, t, e, i) {
    var u = 1, a = n.length, E = r.length;
    if (e !== void 0 && (e = String(e).toLowerCase(), e === "ucs2" || e === "ucs-2" || e === "utf16le" || e === "utf-16le")) {
      if (n.length < 2 || r.length < 2)
        return -1;
      u = 2, a /= 2, E /= 2, t /= 2;
    }
    function m(ur, ar) {
      return u === 1 ? ur[ar] : ur.readUInt16BE(ar * u);
    }
    var F;
    if (i) {
      var S = -1;
      for (F = t; F < a; F++)
        if (m(n, F) === m(r, S === -1 ? 0 : F - S)) {
          if (S === -1 && (S = F), F - S + 1 === E)
            return S * u;
        } else
          S !== -1 && (F -= F - S), S = -1;
    } else
      for (t + E > a && (t = a - E), F = t; F >= 0; F--) {
        for (var B = !0, G = 0; G < E; G++)
          if (m(n, F + G) !== m(r, G)) {
            B = !1;
            break;
          }
        if (B)
          return F;
      }
    return -1;
  }
  o.prototype.includes = function(r, t, e) {
    return this.indexOf(r, t, e) !== -1;
  }, o.prototype.indexOf = function(r, t, e) {
    return Z(this, r, t, e, !0);
  }, o.prototype.lastIndexOf = function(r, t, e) {
    return Z(this, r, t, e, !1);
  };
  function yr(n, r, t, e) {
    t = Number(t) || 0;
    var i = n.length - t;
    e ? (e = Number(e), e > i && (e = i)) : e = i;
    var u = r.length;
    e > u / 2 && (e = u / 2);
    for (var a = 0; a < e; ++a) {
      var E = parseInt(r.substr(a * 2, 2), 16);
      if (Y(E))
        return a;
      n[t + a] = E;
    }
    return a;
  }
  function wr(n, r, t, e) {
    return X(W(r, n.length - t), n, t, e);
  }
  function xr(n, r, t, e) {
    return X(_r(r), n, t, e);
  }
  function Er(n, r, t, e) {
    return X(or(r), n, t, e);
  }
  function mr(n, r, t, e) {
    return X(Sr(r, n.length - t), n, t, e);
  }
  o.prototype.write = function(r, t, e, i) {
    if (t === void 0)
      i = "utf8", e = this.length, t = 0;
    else if (e === void 0 && typeof t == "string")
      i = t, e = this.length, t = 0;
    else if (isFinite(t))
      t = t >>> 0, isFinite(e) ? (e = e >>> 0, i === void 0 && (i = "utf8")) : (i = e, e = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    var u = this.length - t;
    if ((e === void 0 || e > u) && (e = u), r.length > 0 && (e < 0 || t < 0) || t > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    i || (i = "utf8");
    for (var a = !1; ; )
      switch (i) {
        case "hex":
          return yr(this, r, t, e);
        case "utf8":
        case "utf-8":
          return wr(this, r, t, e);
        case "ascii":
        case "latin1":
        case "binary":
          return xr(this, r, t, e);
        case "base64":
          return Er(this, r, t, e);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return mr(this, r, t, e);
        default:
          if (a)
            throw new TypeError("Unknown encoding: " + i);
          i = ("" + i).toLowerCase(), a = !0;
      }
  }, o.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function gr(n, r, t) {
    return r === 0 && t === n.length ? h.fromByteArray(n) : h.fromByteArray(n.slice(r, t));
  }
  function rr(n, r, t) {
    t = Math.min(n.length, t);
    for (var e = [], i = r; i < t; ) {
      var u = n[i], a = null, E = u > 239 ? 4 : u > 223 ? 3 : u > 191 ? 2 : 1;
      if (i + E <= t) {
        var m, F, S, B;
        switch (E) {
          case 1:
            u < 128 && (a = u);
            break;
          case 2:
            m = n[i + 1], (m & 192) === 128 && (B = (u & 31) << 6 | m & 63, B > 127 && (a = B));
            break;
          case 3:
            m = n[i + 1], F = n[i + 2], (m & 192) === 128 && (F & 192) === 128 && (B = (u & 15) << 12 | (m & 63) << 6 | F & 63, B > 2047 && (B < 55296 || B > 57343) && (a = B));
            break;
          case 4:
            m = n[i + 1], F = n[i + 2], S = n[i + 3], (m & 192) === 128 && (F & 192) === 128 && (S & 192) === 128 && (B = (u & 15) << 18 | (m & 63) << 12 | (F & 63) << 6 | S & 63, B > 65535 && B < 1114112 && (a = B));
        }
      }
      a === null ? (a = 65533, E = 1) : a > 65535 && (a -= 65536, e.push(a >>> 10 & 1023 | 55296), a = 56320 | a & 1023), e.push(a), i += E;
    }
    return Fr(e);
  }
  var tr = 4096;
  function Fr(n) {
    var r = n.length;
    if (r <= tr)
      return String.fromCharCode.apply(String, n);
    for (var t = "", e = 0; e < r; )
      t += String.fromCharCode.apply(
        String,
        n.slice(e, e += tr)
      );
    return t;
  }
  function vr(n, r, t) {
    var e = "";
    t = Math.min(n.length, t);
    for (var i = r; i < t; ++i)
      e += String.fromCharCode(n[i] & 127);
    return e;
  }
  function Br(n, r, t) {
    var e = "";
    t = Math.min(n.length, t);
    for (var i = r; i < t; ++i)
      e += String.fromCharCode(n[i]);
    return e;
  }
  function Ar(n, r, t) {
    var e = n.length;
    (!r || r < 0) && (r = 0), (!t || t < 0 || t > e) && (t = e);
    for (var i = "", u = r; u < t; ++u)
      i += Cr[n[u]];
    return i;
  }
  function dr(n, r, t) {
    for (var e = n.slice(r, t), i = "", u = 0; u < e.length - 1; u += 2)
      i += String.fromCharCode(e[u] + e[u + 1] * 256);
    return i;
  }
  o.prototype.slice = function(r, t) {
    var e = this.length;
    r = ~~r, t = t === void 0 ? e : ~~t, r < 0 ? (r += e, r < 0 && (r = 0)) : r > e && (r = e), t < 0 ? (t += e, t < 0 && (t = 0)) : t > e && (t = e), t < r && (t = r);
    var i = this.subarray(r, t);
    return Object.setPrototypeOf(i, o.prototype), i;
  };
  function I(n, r, t) {
    if (n % 1 !== 0 || n < 0)
      throw new RangeError("offset is not uint");
    if (n + r > t)
      throw new RangeError("Trying to access beyond buffer length");
  }
  o.prototype.readUintLE = o.prototype.readUIntLE = function(r, t, e) {
    r = r >>> 0, t = t >>> 0, e || I(r, t, this.length);
    for (var i = this[r], u = 1, a = 0; ++a < t && (u *= 256); )
      i += this[r + a] * u;
    return i;
  }, o.prototype.readUintBE = o.prototype.readUIntBE = function(r, t, e) {
    r = r >>> 0, t = t >>> 0, e || I(r, t, this.length);
    for (var i = this[r + --t], u = 1; t > 0 && (u *= 256); )
      i += this[r + --t] * u;
    return i;
  }, o.prototype.readUint8 = o.prototype.readUInt8 = function(r, t) {
    return r = r >>> 0, t || I(r, 1, this.length), this[r];
  }, o.prototype.readUint16LE = o.prototype.readUInt16LE = function(r, t) {
    return r = r >>> 0, t || I(r, 2, this.length), this[r] | this[r + 1] << 8;
  }, o.prototype.readUint16BE = o.prototype.readUInt16BE = function(r, t) {
    return r = r >>> 0, t || I(r, 2, this.length), this[r] << 8 | this[r + 1];
  }, o.prototype.readUint32LE = o.prototype.readUInt32LE = function(r, t) {
    return r = r >>> 0, t || I(r, 4, this.length), (this[r] | this[r + 1] << 8 | this[r + 2] << 16) + this[r + 3] * 16777216;
  }, o.prototype.readUint32BE = o.prototype.readUInt32BE = function(r, t) {
    return r = r >>> 0, t || I(r, 4, this.length), this[r] * 16777216 + (this[r + 1] << 16 | this[r + 2] << 8 | this[r + 3]);
  }, o.prototype.readIntLE = function(r, t, e) {
    r = r >>> 0, t = t >>> 0, e || I(r, t, this.length);
    for (var i = this[r], u = 1, a = 0; ++a < t && (u *= 256); )
      i += this[r + a] * u;
    return u *= 128, i >= u && (i -= Math.pow(2, 8 * t)), i;
  }, o.prototype.readIntBE = function(r, t, e) {
    r = r >>> 0, t = t >>> 0, e || I(r, t, this.length);
    for (var i = t, u = 1, a = this[r + --i]; i > 0 && (u *= 256); )
      a += this[r + --i] * u;
    return u *= 128, a >= u && (a -= Math.pow(2, 8 * t)), a;
  }, o.prototype.readInt8 = function(r, t) {
    return r = r >>> 0, t || I(r, 1, this.length), this[r] & 128 ? (255 - this[r] + 1) * -1 : this[r];
  }, o.prototype.readInt16LE = function(r, t) {
    r = r >>> 0, t || I(r, 2, this.length);
    var e = this[r] | this[r + 1] << 8;
    return e & 32768 ? e | 4294901760 : e;
  }, o.prototype.readInt16BE = function(r, t) {
    r = r >>> 0, t || I(r, 2, this.length);
    var e = this[r + 1] | this[r] << 8;
    return e & 32768 ? e | 4294901760 : e;
  }, o.prototype.readInt32LE = function(r, t) {
    return r = r >>> 0, t || I(r, 4, this.length), this[r] | this[r + 1] << 8 | this[r + 2] << 16 | this[r + 3] << 24;
  }, o.prototype.readInt32BE = function(r, t) {
    return r = r >>> 0, t || I(r, 4, this.length), this[r] << 24 | this[r + 1] << 16 | this[r + 2] << 8 | this[r + 3];
  }, o.prototype.readFloatLE = function(r, t) {
    return r = r >>> 0, t || I(r, 4, this.length), s.read(this, r, !0, 23, 4);
  }, o.prototype.readFloatBE = function(r, t) {
    return r = r >>> 0, t || I(r, 4, this.length), s.read(this, r, !1, 23, 4);
  }, o.prototype.readDoubleLE = function(r, t) {
    return r = r >>> 0, t || I(r, 8, this.length), s.read(this, r, !0, 52, 8);
  }, o.prototype.readDoubleBE = function(r, t) {
    return r = r >>> 0, t || I(r, 8, this.length), s.read(this, r, !1, 52, 8);
  };
  function T(n, r, t, e, i, u) {
    if (!o.isBuffer(n))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (r > i || r < u)
      throw new RangeError('"value" argument is out of bounds');
    if (t + e > n.length)
      throw new RangeError("Index out of range");
  }
  o.prototype.writeUintLE = o.prototype.writeUIntLE = function(r, t, e, i) {
    if (r = +r, t = t >>> 0, e = e >>> 0, !i) {
      var u = Math.pow(2, 8 * e) - 1;
      T(this, r, t, e, u, 0);
    }
    var a = 1, E = 0;
    for (this[t] = r & 255; ++E < e && (a *= 256); )
      this[t + E] = r / a & 255;
    return t + e;
  }, o.prototype.writeUintBE = o.prototype.writeUIntBE = function(r, t, e, i) {
    if (r = +r, t = t >>> 0, e = e >>> 0, !i) {
      var u = Math.pow(2, 8 * e) - 1;
      T(this, r, t, e, u, 0);
    }
    var a = e - 1, E = 1;
    for (this[t + a] = r & 255; --a >= 0 && (E *= 256); )
      this[t + a] = r / E & 255;
    return t + e;
  }, o.prototype.writeUint8 = o.prototype.writeUInt8 = function(r, t, e) {
    return r = +r, t = t >>> 0, e || T(this, r, t, 1, 255, 0), this[t] = r & 255, t + 1;
  }, o.prototype.writeUint16LE = o.prototype.writeUInt16LE = function(r, t, e) {
    return r = +r, t = t >>> 0, e || T(this, r, t, 2, 65535, 0), this[t] = r & 255, this[t + 1] = r >>> 8, t + 2;
  }, o.prototype.writeUint16BE = o.prototype.writeUInt16BE = function(r, t, e) {
    return r = +r, t = t >>> 0, e || T(this, r, t, 2, 65535, 0), this[t] = r >>> 8, this[t + 1] = r & 255, t + 2;
  }, o.prototype.writeUint32LE = o.prototype.writeUInt32LE = function(r, t, e) {
    return r = +r, t = t >>> 0, e || T(this, r, t, 4, 4294967295, 0), this[t + 3] = r >>> 24, this[t + 2] = r >>> 16, this[t + 1] = r >>> 8, this[t] = r & 255, t + 4;
  }, o.prototype.writeUint32BE = o.prototype.writeUInt32BE = function(r, t, e) {
    return r = +r, t = t >>> 0, e || T(this, r, t, 4, 4294967295, 0), this[t] = r >>> 24, this[t + 1] = r >>> 16, this[t + 2] = r >>> 8, this[t + 3] = r & 255, t + 4;
  }, o.prototype.writeIntLE = function(r, t, e, i) {
    if (r = +r, t = t >>> 0, !i) {
      var u = Math.pow(2, 8 * e - 1);
      T(this, r, t, e, u - 1, -u);
    }
    var a = 0, E = 1, m = 0;
    for (this[t] = r & 255; ++a < e && (E *= 256); )
      r < 0 && m === 0 && this[t + a - 1] !== 0 && (m = 1), this[t + a] = (r / E >> 0) - m & 255;
    return t + e;
  }, o.prototype.writeIntBE = function(r, t, e, i) {
    if (r = +r, t = t >>> 0, !i) {
      var u = Math.pow(2, 8 * e - 1);
      T(this, r, t, e, u - 1, -u);
    }
    var a = e - 1, E = 1, m = 0;
    for (this[t + a] = r & 255; --a >= 0 && (E *= 256); )
      r < 0 && m === 0 && this[t + a + 1] !== 0 && (m = 1), this[t + a] = (r / E >> 0) - m & 255;
    return t + e;
  }, o.prototype.writeInt8 = function(r, t, e) {
    return r = +r, t = t >>> 0, e || T(this, r, t, 1, 127, -128), r < 0 && (r = 255 + r + 1), this[t] = r & 255, t + 1;
  }, o.prototype.writeInt16LE = function(r, t, e) {
    return r = +r, t = t >>> 0, e || T(this, r, t, 2, 32767, -32768), this[t] = r & 255, this[t + 1] = r >>> 8, t + 2;
  }, o.prototype.writeInt16BE = function(r, t, e) {
    return r = +r, t = t >>> 0, e || T(this, r, t, 2, 32767, -32768), this[t] = r >>> 8, this[t + 1] = r & 255, t + 2;
  }, o.prototype.writeInt32LE = function(r, t, e) {
    return r = +r, t = t >>> 0, e || T(this, r, t, 4, 2147483647, -2147483648), this[t] = r & 255, this[t + 1] = r >>> 8, this[t + 2] = r >>> 16, this[t + 3] = r >>> 24, t + 4;
  }, o.prototype.writeInt32BE = function(r, t, e) {
    return r = +r, t = t >>> 0, e || T(this, r, t, 4, 2147483647, -2147483648), r < 0 && (r = 4294967295 + r + 1), this[t] = r >>> 24, this[t + 1] = r >>> 16, this[t + 2] = r >>> 8, this[t + 3] = r & 255, t + 4;
  };
  function nr(n, r, t, e, i, u) {
    if (t + e > n.length)
      throw new RangeError("Index out of range");
    if (t < 0)
      throw new RangeError("Index out of range");
  }
  function er(n, r, t, e, i) {
    return r = +r, t = t >>> 0, i || nr(n, r, t, 4), s.write(n, r, t, e, 23, 4), t + 4;
  }
  o.prototype.writeFloatLE = function(r, t, e) {
    return er(this, r, t, !0, e);
  }, o.prototype.writeFloatBE = function(r, t, e) {
    return er(this, r, t, !1, e);
  };
  function ir(n, r, t, e, i) {
    return r = +r, t = t >>> 0, i || nr(n, r, t, 8), s.write(n, r, t, e, 52, 8), t + 8;
  }
  o.prototype.writeDoubleLE = function(r, t, e) {
    return ir(this, r, t, !0, e);
  }, o.prototype.writeDoubleBE = function(r, t, e) {
    return ir(this, r, t, !1, e);
  }, o.prototype.copy = function(r, t, e, i) {
    if (!o.isBuffer(r))
      throw new TypeError("argument should be a Buffer");
    if (e || (e = 0), !i && i !== 0 && (i = this.length), t >= r.length && (t = r.length), t || (t = 0), i > 0 && i < e && (i = e), i === e || r.length === 0 || this.length === 0)
      return 0;
    if (t < 0)
      throw new RangeError("targetStart out of bounds");
    if (e < 0 || e >= this.length)
      throw new RangeError("Index out of range");
    if (i < 0)
      throw new RangeError("sourceEnd out of bounds");
    i > this.length && (i = this.length), r.length - t < i - e && (i = r.length - t + e);
    var u = i - e;
    return this === r && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(t, e, i) : Uint8Array.prototype.set.call(
      r,
      this.subarray(e, i),
      t
    ), u;
  }, o.prototype.fill = function(r, t, e, i) {
    if (typeof r == "string") {
      if (typeof t == "string" ? (i = t, t = 0, e = this.length) : typeof e == "string" && (i = e, e = this.length), i !== void 0 && typeof i != "string")
        throw new TypeError("encoding must be a string");
      if (typeof i == "string" && !o.isEncoding(i))
        throw new TypeError("Unknown encoding: " + i);
      if (r.length === 1) {
        var u = r.charCodeAt(0);
        (i === "utf8" && u < 128 || i === "latin1") && (r = u);
      }
    } else
      typeof r == "number" ? r = r & 255 : typeof r == "boolean" && (r = Number(r));
    if (t < 0 || this.length < t || this.length < e)
      throw new RangeError("Out of range index");
    if (e <= t)
      return this;
    t = t >>> 0, e = e === void 0 ? this.length : e >>> 0, r || (r = 0);
    var a;
    if (typeof r == "number")
      for (a = t; a < e; ++a)
        this[a] = r;
    else {
      var E = o.isBuffer(r) ? r : o.from(r, i), m = E.length;
      if (m === 0)
        throw new TypeError('The value "' + r + '" is invalid for argument "value"');
      for (a = 0; a < e - t; ++a)
        this[a + t] = E[a % m];
    }
    return this;
  };
  var Ur = /[^+/0-9A-Za-z-_]/g;
  function Ir(n) {
    if (n = n.split("=")[0], n = n.trim().replace(Ur, ""), n.length < 2)
      return "";
    for (; n.length % 4 !== 0; )
      n = n + "=";
    return n;
  }
  function W(n, r) {
    r = r || 1 / 0;
    for (var t, e = n.length, i = null, u = [], a = 0; a < e; ++a) {
      if (t = n.charCodeAt(a), t > 55295 && t < 57344) {
        if (!i) {
          if (t > 56319) {
            (r -= 3) > -1 && u.push(239, 191, 189);
            continue;
          } else if (a + 1 === e) {
            (r -= 3) > -1 && u.push(239, 191, 189);
            continue;
          }
          i = t;
          continue;
        }
        if (t < 56320) {
          (r -= 3) > -1 && u.push(239, 191, 189), i = t;
          continue;
        }
        t = (i - 55296 << 10 | t - 56320) + 65536;
      } else
        i && (r -= 3) > -1 && u.push(239, 191, 189);
      if (i = null, t < 128) {
        if ((r -= 1) < 0)
          break;
        u.push(t);
      } else if (t < 2048) {
        if ((r -= 2) < 0)
          break;
        u.push(
          t >> 6 | 192,
          t & 63 | 128
        );
      } else if (t < 65536) {
        if ((r -= 3) < 0)
          break;
        u.push(
          t >> 12 | 224,
          t >> 6 & 63 | 128,
          t & 63 | 128
        );
      } else if (t < 1114112) {
        if ((r -= 4) < 0)
          break;
        u.push(
          t >> 18 | 240,
          t >> 12 & 63 | 128,
          t >> 6 & 63 | 128,
          t & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return u;
  }
  function _r(n) {
    for (var r = [], t = 0; t < n.length; ++t)
      r.push(n.charCodeAt(t) & 255);
    return r;
  }
  function Sr(n, r) {
    for (var t, e, i, u = [], a = 0; a < n.length && !((r -= 2) < 0); ++a)
      t = n.charCodeAt(a), e = t >> 8, i = t % 256, u.push(i), u.push(e);
    return u;
  }
  function or(n) {
    return h.toByteArray(Ir(n));
  }
  function X(n, r, t, e) {
    for (var i = 0; i < e && !(i + t >= r.length || i >= n.length); ++i)
      r[i + t] = n[i];
    return i;
  }
  function D(n, r) {
    return n instanceof r || n != null && n.constructor != null && n.constructor.name != null && n.constructor.name === r.name;
  }
  function Y(n) {
    return n !== n;
  }
  var Cr = function() {
    for (var n = "0123456789abcdef", r = new Array(256), t = 0; t < 16; ++t)
      for (var e = t * 16, i = 0; i < 16; ++i)
        r[e + i] = n[t] + n[i];
    return r;
  }();
})(pr);
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
(function(f, h) {
  var s = pr, c = s.Buffer;
  function y(p, o) {
    for (var w in p)
      o[w] = p[w];
  }
  c.from && c.alloc && c.allocUnsafe && c.allocUnsafeSlow ? f.exports = s : (y(s, h), h.Buffer = l);
  function l(p, o, w) {
    return c(p, o, w);
  }
  l.prototype = Object.create(c.prototype), y(c, l), l.from = function(p, o, w) {
    if (typeof p == "number")
      throw new TypeError("Argument must not be a number");
    return c(p, o, w);
  }, l.alloc = function(p, o, w) {
    if (typeof p != "number")
      throw new TypeError("Argument must be a number");
    var U = c(p);
    return o !== void 0 ? typeof w == "string" ? U.fill(o, w) : U.fill(o) : U.fill(0), U;
  }, l.allocUnsafe = function(p) {
    if (typeof p != "number")
      throw new TypeError("Argument must be a number");
    return c(p);
  }, l.allocUnsafeSlow = function(p) {
    if (typeof p != "number")
      throw new TypeError("Argument must be a number");
    return s.SlowBuffer(p);
  };
})(j, j.exports);
var Pr = j.exports, q = 65536, Vr = 4294967295;
function Xr() {
  throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`);
}
var Gr = Pr.Buffer, H = fr.crypto || fr.msCrypto;
H && H.getRandomValues ? K.exports = Hr : K.exports = Xr;
function Hr(f, h) {
  if (f > Vr)
    throw new RangeError("requested too many random bytes");
  var s = Gr.allocUnsafe(f);
  if (f > 0)
    if (f > q)
      for (var c = 0; c < f; c += q)
        H.getRandomValues(s.slice(c, c + q));
    else
      H.getRandomValues(s);
  return typeof h == "function" ? process.nextTick(function() {
    h(null, s);
  }) : s;
}
var Jr = K.exports, Wr = Jr, hr = 16, L = rt(), Yr = new RegExp('(\\\\)?"@__(F|R|D|M|S|A|U|I|B|L)-' + L + '-(\\d+)__@"', "g"), $r = /\{\s*\[native code\]\s*\}/g, qr = /function.*?\(/, Kr = /.*?=>.*?/, jr = /[<>\/\u2028\u2029]/g, zr = ["*", "async"], Zr = {
  "<": "\\u003C",
  ">": "\\u003E",
  "/": "\\u002F",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
function Qr(f) {
  return Zr[f];
}
function rt() {
  for (var f = Wr(hr), h = "", s = 0; s < hr; ++s)
    h += f[s].toString(16);
  return h;
}
function tt(f) {
  var h = [];
  for (var s in f)
    typeof f[s] == "function" && h.push(s);
  for (var c = 0; c < h.length; c++)
    delete f[h[c]];
}
var nt = function f(h, s) {
  s || (s = {}), (typeof s == "number" || typeof s == "string") && (s = { space: s });
  var c = [], y = [], l = [], p = [], o = [], w = [], U = [], A = [], d = [], R = [];
  function _(k, v) {
    if (s.ignoreFunction && tt(v), !v && v !== void 0 && v !== BigInt(0))
      return v;
    var x = this[k], g = typeof x;
    if (g === "object") {
      if (x instanceof RegExp)
        return "@__R-" + L + "-" + (y.push(x) - 1) + "__@";
      if (x instanceof Date)
        return "@__D-" + L + "-" + (l.push(x) - 1) + "__@";
      if (x instanceof Map)
        return "@__M-" + L + "-" + (p.push(x) - 1) + "__@";
      if (x instanceof Set)
        return "@__S-" + L + "-" + (o.push(x) - 1) + "__@";
      if (x instanceof Array) {
        var P = x.filter(function() {
          return !0;
        }).length !== x.length;
        if (P)
          return "@__A-" + L + "-" + (w.push(x) - 1) + "__@";
      }
      if (x instanceof URL)
        return "@__L-" + L + "-" + (R.push(x) - 1) + "__@";
    }
    return g === "function" ? "@__F-" + L + "-" + (c.push(x) - 1) + "__@" : g === "undefined" ? "@__U-" + L + "-" + (U.push(x) - 1) + "__@" : g === "number" && !isNaN(x) && !isFinite(x) ? "@__I-" + L + "-" + (A.push(x) - 1) + "__@" : g === "bigint" ? "@__B-" + L + "-" + (d.push(x) - 1) + "__@" : v;
  }
  function O(k) {
    var v = k.toString();
    if ($r.test(v))
      throw new TypeError("Serializing native function: " + k.name);
    if (qr.test(v) || Kr.test(v))
      return v;
    var x = v.indexOf("("), g = v.substr(0, x).trim().split(" ").filter(function(M) {
      return M.length > 0;
    }), P = g.filter(function(M) {
      return zr.indexOf(M) === -1;
    });
    return P.length > 0 ? (g.indexOf("async") > -1 ? "async " : "") + "function" + (g.join("").indexOf("*") > -1 ? "*" : "") + v.substr(x) : v;
  }
  if (s.ignoreFunction && typeof h == "function" && (h = void 0), h === void 0)
    return String(h);
  var C;
  return s.isJSON && !s.space ? C = JSON.stringify(h) : C = JSON.stringify(h, s.isJSON ? null : _, s.space), typeof C != "string" ? String(C) : (s.unsafe !== !0 && (C = C.replace(jr, Qr)), c.length === 0 && y.length === 0 && l.length === 0 && p.length === 0 && o.length === 0 && w.length === 0 && U.length === 0 && A.length === 0 && d.length === 0 && R.length === 0 ? C : C.replace(Yr, function(k, v, x, g) {
    if (v)
      return k;
    if (x === "D")
      return 'new Date("' + l[g].toISOString() + '")';
    if (x === "R")
      return "new RegExp(" + f(y[g].source) + ', "' + y[g].flags + '")';
    if (x === "M")
      return "new Map(" + f(Array.from(p[g].entries()), s) + ")";
    if (x === "S")
      return "new Set(" + f(Array.from(o[g].values()), s) + ")";
    if (x === "A")
      return "Array.prototype.slice.call(" + f(Object.assign({ length: w[g].length }, w[g]), s) + ")";
    if (x === "U")
      return "undefined";
    if (x === "I")
      return A[g];
    if (x === "B")
      return 'BigInt("' + d[g] + '")';
    if (x === "L")
      return "new URL(" + f(R[g].toString(), s) + ")";
    var P = c[g];
    return O(P);
  }));
};
const et = /* @__PURE__ */ Tr(nt), lr = "sanity:client", sr = "\0" + lr;
function it(f) {
  return {
    name: "sanity:client",
    resolveId(h) {
      if (h === lr)
        return sr;
    },
    load(h) {
      if (h === sr)
        return `
          import { createClient } from "@sanity/client";
          export const sanityClient = createClient(
            ${et(f)}
          );
        `;
    }
  };
}
function ot(f) {
  const h = "sanity:studio", s = h;
  return {
    name: "sanity:studio",
    resolveId(c) {
      return c === h ? s : null;
    },
    async load(c) {
      if (c === h) {
        const y = await this.resolve("/sanity.config");
        if (!y)
          throw new Error(
            "[@sanity/astro]: Sanity Studio requires a `sanity.config.ts|js` file in your project root."
          );
        if (!f.studioBasePath)
          throw new Error(
            "[@sanity/astro]: The `studioBasePath` option is required in `astro.config.mjs`. For example — `studioBasePath: '/admin'`"
          );
        return `
        import studioConfig from "${y.id}";

        if (studioConfig.basePath) {
          if (studioConfig.basePath !== "/${f.studioBasePath}") {
            console.warn(
              "[@sanity/astro]: This integration ignores the basePath setting in sanity.config.ts|js. To set the basePath for Sanity Studio, use the studioBasePath option in astro.config.mjs and remove it from sanity.config.ts.");
          }
        }

        export const config = {
          ...studioConfig,
          // override basePath from sanity.config.ts|js with plugin setting
          basePath: "${f.studioBasePath}",
        }
        `;
      }
      return null;
    }
  };
}
const ut = {
  apiVersion: "v2023-08-24"
};
function at({
  studioBasePath: f,
  ...h
}) {
  return {
    name: "@sanity/astro",
    hooks: {
      "astro:config:setup": ({ injectScript: s, injectRoute: c, updateConfig: y }) => {
        y({
          vite: {
            plugins: [
              it({
                ...ut,
                ...h
              }),
              ot({ studioBasePath: f })
            ]
          }
        }), f && c({
          // @ts-expect-error
          entryPoint: "@sanity/astro/studio/studio-route.astro",
          // Astro <= 3
          entrypoint: "@sanity/astro/studio/studio-route.astro",
          // Astro > 3
          pattern: `/${f}/[...params]`,
          prerender: !1
        }), s(
          "page-ssr",
          `
          import { sanityClient } from "sanity:client";
          globalThis.sanityClient = sanityClient;
          `
        );
      }
    }
  };
}
export {
  at as default
};
