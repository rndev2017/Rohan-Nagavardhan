import { ArrayExpression, Comment, Literal, ObjectExpression, ParserOptions, Property, Value } from './interfaces';
export declare function parse(str: string, opts?: ParserOptions): Value;
export default class Parser {
    str: string;
    index: number;
    value: Value;
    onComment: (comment: Comment) => void;
    onValue: (value: Value) => void;
    constructor(str: string, opts?: ParserOptions);
    readWhitespaceOrComment(): void;
    error(message: string, index?: number): void;
    eat(str: string, required?: boolean): string;
    peek(): string;
    read(pattern: RegExp): string;
    readUntil(pattern: RegExp): string;
    readArray(): ArrayExpression;
    readBoolean(): Literal<boolean>;
    readNull(): Literal<null>;
    readLiteral(): Literal;
    readNumber(): Literal<number>;
    readObject(): ObjectExpression;
    readProperty(): Property;
    readPropertyKey(): Literal<string>;
    readString(): Literal<string>;
    readValue(): Value;
}
